[
  "¨Ø3Òg\u000e¯³ÖômN„\\».",
  [
    [
      "Vale.AES.PPC64LE.PolyOps.va_lemma_VPolyAdd",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "proj_equation_Prims.Cons_@hd", "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok"
      ],
      0,
      "e9a8c930d3ca810e28404b3c1d0827c6"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_wpProof_VPolyAdd",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.PolyOps.va_wp_VPolyAdd",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "161b98e2dc721908a595f00848f96d10"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_quick_VPolyAdd",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "b0f0a4d39f3dc38b8c7aa7a526ae3a87"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_lemma_VPolyAnd",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "proj_equation_Prims.Cons_@hd", "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok"
      ],
      0,
      "c12984a979fe9819d57e146f1f1d6f07"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_wpProof_VPolyAnd",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.PolyOps.va_wp_VPolyAnd",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "d97248e3db06019b3cd29df9b1e586bd"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_quick_VPolyAnd",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "4c7ef857b4ec544601c8f71e933cb347"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_lemma_VSwap",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Math.Poly2.swap",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.Math.Poly2.Bits.lemma_of_quad32_degree",
        "lemma_Vale.Math.Poly2.Bits.lemma_to_of_quad32",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_mask_degree",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_shift_degree",
        "lemma_Vale.Math.Poly2.lemma_add_degree",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Prims.Cons_@hd", "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Math.Poly2.mask",
        "typing_Vale.Math.Poly2_s.shift",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "95286e62d850a439f969fc344e28b3be"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_wpProof_VSwap",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.PolyOps.va_wp_VSwap",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "157eb066cfc62db73c69596ba4931004"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_quick_VSwap",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "9b7a131509115a32584a370d1f525892"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_lemma_VPolyMul",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.quad32_double_hi",
        "equation_Vale.Arch.Types.quad32_double_lo",
        "equation_Vale.Def.Types_s.double32",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.Math.Poly2.Bits.lemma_of_double32_degree",
        "lemma_Vale.Math.Poly2.Bits.lemma_of_quad32_degree",
        "lemma_Vale.Math.Poly2.Bits.lemma_to_of_quad32",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_mask_degree",
        "lemma_Vale.Math.Poly2.lemma_add_degree",
        "lemma_Vale.Math.Poly2.lemma_mul_degree",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Prims.Cons_@hd", "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.quad32_double_hi",
        "typing_Vale.Arch.Types.quad32_double_lo",
        "typing_Vale.Math.Poly2.Bits_s.of_double32",
        "typing_Vale.Math.Poly2.Bits_s.to_quad32",
        "typing_Vale.Math.Poly2_s.add", "typing_Vale.Math.Poly2_s.mul",
        "typing_Vale.Math.Poly2_s.shift",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "e289c390a78bc7da9752236f412ba72b"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_wpProof_VPolyMul",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.PolyOps.va_wp_VPolyMul",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "d004e55b8b7c92b61b8919b216eefe49"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_quick_VPolyMul",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "68c75afe335b45f56877a107cd9be120"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_lemma_VPolyMulLow",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Prims.Cons_@hd", "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "0f5bbc363be9f9fa1951567d6e21becb"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_wpProof_VPolyMulLow",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.PolyOps.va_wp_VPolyMulLow",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "547fc042f77c43ea7cc818ffb5ce3f0e"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_quick_VPolyMulLow",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "63c67294a6bdae4fdad14909b813f48d"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_lemma_VPolyMulHigh",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Prims.Cons_@hd", "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "3d6691546bfdb337aa3f4be994255ba5"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_wpProof_VPolyMulHigh",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.PolyOps.va_wp_VPolyMulHigh",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "ed222916dba3fc5bc3ac092088902e89"
    ],
    [
      "Vale.AES.PPC64LE.PolyOps.va_quick_VPolyMulHigh",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "3f969f8d27084d8762a98312d527139b"
    ]
  ]
]