[
  "ªØ}B\u0004çÂ~Õ‰^Q·ÙÉT",
  [
    [
      "Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "e2f836d7b50e48b3cb57790c22402f6b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Prims_interpretation_Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_98fd5285a7f6989dfcda612dab2be46d",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.pos", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Equality", "proj_equation_Prims.Cons_hd",
        "proj_equation_Prims.Cons_tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "92280e21a36b441799c6d8f11ae522ca"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Load_one_lsb",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "b8801058d1a0ff32e66c7f75cb2e0b0d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "da12cd77f062666686e869917aa1b9ee"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_653c518f8229899a7c5713f72f16bb65"
      ],
      0,
      "93183d95ba611cff0c31a2ba6ec8255c"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks128",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.nat",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.int",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_buffer_addr",
        "lemma_Vale.PPC64LE.Memory.modifies_buffer_readable",
        "lemma_Vale.PPC64LE.Memory.modifies_same_heaplet_id",
        "lemma_Vale.PPC64LE.Memory.modifies_valid_taint",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_vl_taint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_Prims.eq2", "typing_Prims.l_and", "typing_Prims.l_imp",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE.inc32lite",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "f2c449b14bb7a926cb56b4faff2a2fa3"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@query", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "6c87f772c270c7dfa9a0e0d0ac86e3f4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks128",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "7e929f0982341e9caf38eea124c77a3a"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "139f4e0a1677ab3b01df70c9d27778e5"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_and", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__4",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GHash_BE.ghash_incremental0",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words_s.int_to_natN", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "ab88011f50ef2f1c4d1a21169f1b7459"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_auth_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4__4",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "28ddd5983b49376543b5801906a8f04d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "0de0937147b255dfa94f79bf9525daac"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "f834f3a64bafa1d7e9acd730313f6e07"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "e1aed87b2aff57b44b84ffe95e112700"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_make_length_quad",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "eq2-interp",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo1",
        "projection_inverse_Vale.Def.Words_s.Mktwo_hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__hi3",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion"
      ],
      0,
      "56760000c983657e8985fcbe89a3adb0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "1eeed707268d692e6bb16d9516a11384"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_make_length_quad",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_make_length_quad",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs"
      ],
      0,
      "c44ab19b07a7c8e007c94a06f17d923f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_make_length_quad",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "7ca386bd5e38445fcf0785f2380f9071"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Vale.Def.Words_s.two",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Def.Words_s.Mktwo_hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_lo",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_2a8e89f934bafac1d84d49842fde70cf",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5d073749e68b6ec3f1efce103bc2bd1a",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_a0cd7d06c5da6444b6b51b319febde8e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.length",
        "typing_Prims.pow2", "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree"
      ],
      0,
      "897f31f78465ee3f703b1398d0e3d39c"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state", "int_typing",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_a0cd7d06c5da6444b6b51b319febde8e",
        "refinement_interpretation_Tm_refine_c8b3617557a9d99c0cbeb9be9a92e1ec",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.Types.be_quad32_to_bytes"
      ],
      0,
      "eff7ba3b6b4faeb77f5b57500f839305"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_pad_to_128_bits",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.l_and",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat64",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Prims.pair@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_a",
        "projection_inverse_Vale.Def.Words_s.Mktwo_hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "refinement_interpretation_Tm_refine_06b9f0ab8ff3c0e49aa83954383f15a4",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_507ed4c55777344d5e25694fb1d7ecf2",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_a0cd7d06c5da6444b6b51b319febde8e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_Prims.squash",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Types_s.be_bytes_to_quad32",
        "typing_Vale.Def.Types_s.ishl",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion"
      ],
      0,
      "410ca66fb540d50956a77b91d51c97b9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state", "int_typing",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_a0cd7d06c5da6444b6b51b319febde8e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.Types.be_quad32_to_bytes"
      ],
      0,
      "e4addd1a4350d7d51967623210215dbe"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_pad_to_128_bits",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_reg"
      ],
      0,
      "7317781a5dcf4923419f45e28c21d785"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "31298ade05b3a72d443d2e91b9662d95"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_a0cd7d06c5da6444b6b51b319febde8e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE"
      ],
      0,
      "3476db0f37d5fb71371d86a30c4d19aa"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81c982d8f0ca4f51095b557b97baf00f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "ef43dae79c3fc68e491f901c0b9fa4b4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Ghash_extra_bytes",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.l_imp",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq4",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "refinement_interpretation_Tm_refine_06b9f0ab8ff3c0e49aa83954383f15a4",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_1c920df238056cce4004409123681721",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_5834f17226f258d10f6cc5e617bb0da1",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_a0cd7d06c5da6444b6b51b319febde8e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_Prims.eq2",
        "typing_Prims.l_and", "typing_Prims.l_imp",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Words.Seq_s.four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "230cb69740055aa96019c0a59cdb57f0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.State.update_reg",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "84d8249ccc5b3b5795ef15fcfb05f2d3"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Prims_interpretation_Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_98fd5285a7f6989dfcda612dab2be46d",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Ghash_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs"
      ],
      0,
      "f8213b60881233ab9d02ad7950923613"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "5d6c03034ea8da341a784885231d3fb8"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_extra_bytes",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "8ff9711c8e5232ae95e02528f1093628"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7ee097026edd901670ea87fd694b3a8b",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "13539f236a60c8a78912604ced8f3e6d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_extra_bytes",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Vale.Def.Types_s_interpretation_Tm_arrow_f33a1e80d097b65957309e13d3848492",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and", "equation_Prims.min",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCTR_BE.gctr_partial_def",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_FStar.Seq.Base.index",
        "function_token_typing_Vale.AES.GCTR_BE.gctr_partial",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_21b1463d18ebbb1eb97818a4f59e4000",
        "refinement_interpretation_Tm_refine_25bd5eff38dceffc77a26c22534644df",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.AES.GCTR_BE.gctr_partial_def",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.index",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Seqs_s.seq_map",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "dd0e36afec2865649e94a1f3b9365243"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "426bf8646ce73a3a06b58c91cf2779ec"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Prims_interpretation_Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_98fd5285a7f6989dfcda612dab2be46d",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs"
      ],
      0,
      "76b4880c600dbdbcbbd7d6240fd5df22"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "8337cd1ed85108bb91c6ae34f54635ad"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "b2t_def", "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8", "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "kinding_Vale.Def.Words_s.four@tok",
        "l_quant_interp_9945cea6bfd817397967f46a95f8a136",
        "lemma_FStar.Seq.Base.lemma_init_len", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE"
      ],
      0,
      "9578beea527024f521452444403f4569"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_4cdb3134b6890ee7e87b3d263a649aa5",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "264a312a7f10ebff1a28bdebf458fff0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_auth",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_and", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_FStar.Seq.Base.index",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_0b8eead90a2e8f738acd1b23ec8c267c",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_69392a40a5271a5b7cddfead7c2ba63d",
        "interpretation_Tm_abs_853c315ccff7f1a8d9cd10387e972b70",
        "interpretation_Tm_abs_9a10c228d5e5052ce23671142b5900a2",
        "interpretation_Tm_abs_a02785cc8b331da7b37ea6391df06114",
        "interpretation_Tm_abs_aaa0141f4d7a3c07f0629493a96e8f54",
        "interpretation_Tm_abs_c2fbf09e4369f5cd650250afddab02b4",
        "interpretation_Tm_abs_d443efc1ec417ba93d52c0ed233b1df8",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_vl_taint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_06b9f0ab8ff3c0e49aa83954383f15a4",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "106489afba6e2117273461f3b987cbe6"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_0efdb96e8a69ed5886ead7e89337b14a",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_d8abd26bf0c5acdda911249ee7ef8367",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_ddf0c1124a0439c4b3a754c9dd42bbe8",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_ec695607a6036cd3b431273cf0b0cbcb",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_40496c55c6efd7578c49a4ad75dfb123",
        "interpretation_Tm_abs_6c226167519c2ca061856e9b2e8f1003",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.seq",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Tm_abs_40496c55c6efd7578c49a4ad75dfb123",
        "typing_Tm_abs_6c226167519c2ca061856e9b2e8f1003",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "0439989b62cec14acc3ae2374aa82009"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "data_typing_intro_Vale.Def.Words_s.Mkfour@tok",
        "eq2-interp", "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_auth",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_40496c55c6efd7578c49a4ad75dfb123",
        "interpretation_Tm_abs_6c226167519c2ca061856e9b2e8f1003",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "l_and-interp", "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.AES.GHash_BE.ghash_incremental0",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "4d68f8eb94cc95c044e235a030a00925"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "fd7d352bb2d1267e0b680788a1b853fd"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_Prims.squash",
        "equation_Vale.AES.GCM_BE_s.supported_iv_BE",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8f53c9bd715d5bf10798304ebe2c54e8",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.pow2",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "f0f36230534a29b563289802273299b9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "42f61c0a18a66202d424686096f1564d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.GCM_BE.set_to_one",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat64",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_FStar.Seq.Base.index",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_aaa0141f4d7a3c07f0629493a96e8f54",
        "interpretation_Tm_abs_c2fbf09e4369f5cd650250afddab02b4",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo1",
        "projection_inverse_Vale.Def.Words_s.Mktwo_hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_25bd5eff38dceffc77a26c22534644df",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GCM_BE_s.compute_iv_BE",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.int_to_natN", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "bdcb1d3e081b0fd4d797bbe0c22ebee2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "9a0c28b31337d61536e319092c981822"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "de97a3f3d290e3d1797fc6dfc963777e"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "a181e91e5264595d412f9514fea930b9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_int_at_least",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "kinding_Vale.Def.Words_s.four@tok", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_4f1d92a9a3f071e1fa3026ba94fce31c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.length",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "093fcdf9b789468e9d4bbe09b7360099"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d2bc21cb3a0a4de6ead626a046febbed",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "59aba2f58dc82ea9bae3cd8aed4b87e8"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_8a35988ee778f4d1c8fca6f37e77ee48",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_9aa24830c2a87e64e50a76a2d63acf7e",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_c5db5fb70a06110a808a2f2c7a8ba895",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_ddf0c1124a0439c4b3a754c9dd42bbe8",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_ec695607a6036cd3b431273cf0b0cbcb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_192",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_Vale.Def.Words_s.Mkfour",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_elim_Vale.PPC64LE.Machine_s.Mkxer_t",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE.empty_seq_quad32",
        "equation_Vale.AES.GCTR_BE.inc32lite",
        "equation_Vale.AES.GCTR_BE_s.gctr_encrypt_block",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.add_wrap_quad32",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0",
        "equation_Vale.Def.Types_s.add_wrap",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.xer_t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_02899ab84cafe3992bcebe713080296e",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_1c7d0ac5410208f3a22b2e86cc827da5",
        "interpretation_Tm_abs_22b69b234f768c0b1a0d240e62e8b90f",
        "interpretation_Tm_abs_2cbbe982a618d484cfd4ec8226303bad",
        "interpretation_Tm_abs_3f61bfe7ed19e89a38a2fdc50a44e03c",
        "interpretation_Tm_abs_48777573d46239d96af298f13e5aeea3",
        "interpretation_Tm_abs_66c6356b3fc2b5cb4f870e55d6374cb4",
        "interpretation_Tm_abs_80cae19342e9837fa2049da4716088be",
        "interpretation_Tm_abs_9b0ca9b1c4caa3f86ee5bf067f969fb5",
        "interpretation_Tm_abs_a3217aa8c7fd7f63fda073606768ec8d",
        "interpretation_Tm_abs_a537ac963c03950eb93356c3c8dc70ea",
        "interpretation_Tm_abs_a71e9766172c258396a3c6bc7114f5ef",
        "interpretation_Tm_abs_b09fbcd6f33a902155f0783d9ae326f3",
        "interpretation_Tm_abs_b499d34256e0dc6a820710dd58a865be",
        "interpretation_Tm_abs_b53f57602283357117f938b9acb0f7a7",
        "interpretation_Tm_abs_bbd4f92f0bb04c000f5363750b267b22",
        "interpretation_Tm_abs_bd3792178b0537e36eb9709b40cb583d",
        "interpretation_Tm_abs_c7c6c8e9cc16a9378e247149cd06342d",
        "interpretation_Tm_abs_c8d6fffd209f2c055f825a12aa0a11d8",
        "interpretation_Tm_abs_ce8fa1753628321f0b1036a40a6a87fa",
        "interpretation_Tm_abs_dc295386161db9d54b4d43b74efc88d0",
        "interpretation_Tm_abs_e7ea0e1376726d60a7a903728d7c9395",
        "interpretation_Tm_abs_f350d6d2f0337e47fd22e81d660616fb",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_refl",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_06b9f0ab8ff3c0e49aa83954383f15a4",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_1c920df238056cce4004409123681721",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_5f5bfb497959f486a873a00c7b928a13",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Tm_abs_66c6356b3fc2b5cb4f870e55d6374cb4",
        "typing_Tm_abs_80cae19342e9837fa2049da4716088be",
        "typing_Tm_abs_90e12f898393c55494eaaefd0da189af",
        "typing_Tm_abs_9b0ca9b1c4caa3f86ee5bf067f969fb5",
        "typing_Tm_abs_a537ac963c03950eb93356c3c8dc70ea",
        "typing_Vale.AES.GCTR_BE.empty_seq_quad32",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE_s.inc32",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__hi2",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__hi3",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo1",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "1464beeb50be29a8a75abb75fbacfb67"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_c5db5fb70a06110a808a2f2c7a8ba895",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_3f61bfe7ed19e89a38a2fdc50a44e03c",
        "interpretation_Tm_abs_54da2db9d4cef7af44de95b21e8108bb",
        "interpretation_Tm_abs_a71e9766172c258396a3c6bc7114f5ef",
        "interpretation_Tm_abs_b499d34256e0dc6a820710dd58a865be",
        "interpretation_Tm_abs_e7ea0e1376726d60a7a903728d7c9395",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f5bfb497959f486a873a00c7b928a13",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Tm_abs_7800542485abf7183f0a3af16491a84d",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "e56057a9d5e5e546007748a476ea8d54"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_interpretation_Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_98fd5285a7f6989dfcda612dab2be46d",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ea8148538cc99570c0ce19851fc7a332",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_1c7d0ac5410208f3a22b2e86cc827da5",
        "interpretation_Tm_abs_3f61bfe7ed19e89a38a2fdc50a44e03c",
        "interpretation_Tm_abs_54da2db9d4cef7af44de95b21e8108bb",
        "interpretation_Tm_abs_66c6356b3fc2b5cb4f870e55d6374cb4",
        "interpretation_Tm_abs_7800542485abf7183f0a3af16491a84d",
        "interpretation_Tm_abs_92caf7fddf90922782b63e88f806e80c",
        "interpretation_Tm_abs_a71e9766172c258396a3c6bc7114f5ef",
        "interpretation_Tm_abs_b499d34256e0dc6a820710dd58a865be",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "interpretation_Tm_abs_dc70bd6f0ea9c05f187ed2de13dd4590",
        "interpretation_Tm_abs_e7ea0e1376726d60a7a903728d7c9395",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_5a7e805c47071e89f6292f4b5f4aa0f5",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "typing_Vale.AES.PPC64LE.GCMencrypt.va_code_Gcm_blocks",
        "typing_Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "736470590e1e80cff7b1b7b2b0edbd55"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "3318dbf78a4c42cb553aabbd05124be0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0f42ca488c8a912584586c820cfeb929",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2e9bf6d0a1614930f60b883d2b2f3630",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "31afc5882aea1b85d592c83abca0f173"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "bool_inversion",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6fb200855e80cada9b7b9ce2c32cb090",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "4e3ac373be8c2a9d0bb4b6a122f1e46f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_wrapped",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "FStar.Seq.Base_pretyping_7efa52b424e80c83ad68a652aa3561e4",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_Prims.eq2",
        "equation_Prims.l_and", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_02899ab84cafe3992bcebe713080296e",
        "interpretation_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "interpretation_Tm_abs_2b75a2359066ef9cc273c079cfe4bac3",
        "interpretation_Tm_abs_a1dbc8c5ee3b1fd14098ecc29ecd80fd",
        "interpretation_Tm_abs_b01007083458e25d2e1627cb60895511",
        "interpretation_Tm_abs_b53f57602283357117f938b9acb0f7a7",
        "interpretation_Tm_abs_bbd4f92f0bb04c000f5363750b267b22",
        "interpretation_Tm_abs_c8d6fffd209f2c055f825a12aa0a11d8",
        "interpretation_Tm_abs_dba584c43da858a0bb0d5632d9463a04",
        "interpretation_Tm_abs_dc295386161db9d54b4d43b74efc88d0",
        "interpretation_Tm_abs_f350d6d2f0337e47fd22e81d660616fb",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mktwo_hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion"
      ],
      0,
      "b62362d0e4763921f6c5240db9cbd979"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "bool_inversion",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "db2cf3f31a7e6fd4d2136dd45c990cc4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Prims_interpretation_Tm_arrow_2eaa01e78f73e9bab5d0955fc1a662da",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_98fd5285a7f6989dfcda612dab2be46d",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ea8148538cc99570c0ce19851fc7a332",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "bool_inversion", "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_wrapped",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok"
      ],
      0,
      "e67f04791b8c2bdf6a1b75f053051389"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "fa3ca948f7ae9d659c20ebcbc5bb2925"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_req_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.l_and",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "56a51b07e1cabb8e252e47afd6cada93"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_ens_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.l_and", "equation_Prims.nat",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_req_Gcm_blocks_stdcall",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "46d02c32711bb710ea0249822c86d65d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "2351a4c2ff190106db044a436f45568a"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_ceeb4a3ce74a105537f6a43fb3c4fbdf",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "d96fffd18f172f0d8d4d3c70c19d3a56"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_stdcall",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.Public",
        "constructor_distinct_Vale.Arch.HeapTypes_s.Secret",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "data_elim_Vale.Arch.HeapImpl.Mkbuffer_info",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Immutable@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "eq2-interp", "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset128",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.buffer_info",
        "fuel_guarded_inversion_Vale.Arch.HeapTypes_s.base_typ",
        "fuel_guarded_inversion_Vale.Arch.HeapTypes_s.taint",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat64",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Stack_Sems.equiv_init_r1",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64_128",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_25bd5eff38dceffc77a26c22534644df",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8bf7b005c03805b917f5228c650ea3ce",
        "refinement_interpretation_Tm_refine_8de17eec3c1f64d75609148b2dff3180",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.index",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Prims.eq2", "typing_Prims.l_and",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.AES_BE_s.key_to_round_keys_word",
        "typing_Vale.Arch.HeapImpl.__proj__Mkbuffer_info__item__bi_typ",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.loc_union",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_Sems.stack_to_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion"
      ],
      0,
      "d6b7c3026fe90b1f2d95c59e3436d1c1"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "8ea1b6c509e5fc2716b4b7d1427934ab"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_stdcall",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stackTaint",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1"
      ],
      0,
      "5915c7a041e842e73b242393e0141ffd"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "b8adaa7e04379740852b00f36dd4e11d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_req_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.l_and", "equation_Prims.nat",
        "equation_Prims.squash", "equation_Prims.subtype_of",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "179b9c72b3d54b3e3a4472ca2d9fab69"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_iv_stdcall",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "daa32ca3d16d636cdf1a2c0990a8c808"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "9a446ee962a0417de5bfc98ae6f03b52"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv_stdcall",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.Arch.HeapImpl.Immutable",
        "constructor_distinct_Vale.Arch.HeapImpl.Mutable",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Prims.Cons", "data_elim_Vale.Arch.HeapImpl.Mkbuffer_info",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Immutable@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "eq2-interp", "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Vale.AES.GCM_BE_s.supported_iv_BE",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.buffer_info",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.mutability",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Arch.HeapTypes_s.base_typ",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2a09f2450e26fe8d9312d402cf7d7936",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5549932fcbbb438d28c7dae485192f2f",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8de17eec3c1f64d75609148b2dff3180",
        "refinement_interpretation_Tm_refine_8f53c9bd715d5bf10798304ebe2c54e8",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.index",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Prims.eq2", "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.AES.GCM_BE_s.compute_iv_BE",
        "typing_Vale.Arch.HeapImpl.__proj__Mkbuffer_info__item__bi_typ",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "e85886a6c63b188a82e54e0bcc64d1f4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Classical_interpretation_Tm_arrow_6980332764c4493a7b0df5c02f7aefbe",
        "FStar.Seq.Base_interpretation_Tm_arrow_44bb45ed5c2534b346e0f58ea5033251",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.Def.Words_s.nat32",
        "function_token_typing_Vale.Def.Words_s.nat8",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_12cfdc5e5e9b4a21e137c684eae73d5b",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_12f0bbc5cd2aeb167bc7e771b588a4ca",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "0ec512a18501e4fa27243ac92050cab8"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_a7d5cc170be69663c495e8582d2bc62a",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv_stdcall",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.Arch.HeapImpl.vale_heap",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_13b257b5b211a4bb6190b81c006bd8dc",
        "interpretation_Tm_abs_c70217d5c31785af9a11145ac9cd7ae9",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3__3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7e4a6c5999db731b5d17d0418dfeea3e",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "1ac9dff8deb4ae117c16b04751d23f0c"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "f3d95963633ea21f47f267b7b8f29c2f"
    ]
  ]
]