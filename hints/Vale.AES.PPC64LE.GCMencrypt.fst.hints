[
  "»ˆTÛ\u0001\u0014E‡²¯\u0014gY\u0010r\u0006",
  [
    [
      "Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "92896dd2a4feb7382dbc85b1f85ea8c7"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_interpretation_Tm_arrow_b4b6e62fc3c0ff34812bab4dbf392b9d",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.pos", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Equality", "proj_equation_Prims.Cons_@hd",
        "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_d02febb7b7f7242185cbf5632703f8d4",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "af5d87706a1816d53c1e8d90dd096709"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Load_one_lsb",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "3fdd7b37c10678a3ce304640fad6a8b2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "422d9ac84a067cbaca192b137fa1cb22"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_65ebf9ed9fd29fc762805ed0f14bb9ef"
      ],
      0,
      "7bd551788609234a42e48bb8169eb4c1"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks128",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_8695aeca6413b3389af2aeb2034d97e5", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.nat",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_buffer_addr",
        "lemma_Vale.PPC64LE.Memory.modifies_buffer_readable",
        "lemma_Vale.PPC64LE.Memory.modifies_same_heaplet_id",
        "lemma_Vale.PPC64LE.Memory.modifies_valid_taint",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_Prims.eq2", "typing_Prims.int", "typing_Prims.l_and",
        "typing_Prims.l_imp",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE.inc32lite",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.eta",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "a9ebbc34694eaabd924d05c21c044393"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@query", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "8bf8acdcf2b2b306d4cd3de899c0fe92"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks128",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "fae2a6328b2e8120ae7898bef899f23b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "ce48e73d1fd03c0b61ff14821c829242"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eq2", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat", "equation_Prims.pos",
        "equation_Prims.squash",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_4",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d02febb7b7f7242185cbf5632703f8d4",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.GHash_BE.ghash_incremental0",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "6456b07520de40a5b41086bc76ba55a9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_auth_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_4",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "90e57c53ce8a188132a15daf9dd95684"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "75bc80ac95b9111261957385d766b090"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "a257e9db5c7341f6a970a29b2cd78961"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "9e111d4fc79d9e2ac79458846e6e33fa"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_make_length_quad",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap", "eq2-interp",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo1",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion",
        "unit_typing"
      ],
      0,
      "fa8b6fe7ab95890343ae0dd5e53a635f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "32030c23e0634ca8e6bbfa7e7b74465b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_make_length_quad",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_make_length_quad",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "576a21758c606f8e549b8b06b7dc85fc"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_make_length_quad",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "11a7841c632008ac0482442e991aeb11"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_2a8e89f934bafac1d84d49842fde70cf",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5d073749e68b6ec3f1efce103bc2bd1a",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7df49ea7fc73913e7f484249955dcdd0",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.length",
        "typing_Prims.pow2", "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree"
      ],
      0,
      "238e0d408b5a2b157df94356d9c3ec61"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_06fb7384d84f50aa6584124d2d7be6dc",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_7df49ea7fc73913e7f484249955dcdd0",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.Types.be_quad32_to_bytes"
      ],
      0,
      "7d6ea2660da622e529612ab93748f532"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_pad_to_128_bits",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat64",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "l_and-interp", "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@a",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_507ed4c55777344d5e25694fb1d7ecf2",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7df49ea7fc73913e7f484249955dcdd0",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d02febb7b7f7242185cbf5632703f8d4",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_Prims.l_and",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Types_s.be_bytes_to_quad32",
        "typing_Vale.Def.Types_s.ishl",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion",
        "unit_typing"
      ],
      0,
      "318b43c4b8ffda851d25cb4e7fb1527c"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_7df49ea7fc73913e7f484249955dcdd0",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.Types.be_quad32_to_bytes"
      ],
      0,
      "ee32e8135af93c073016d1cf480643ba"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_pad_to_128_bits",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_reg", "unit_typing"
      ],
      0,
      "02cf841cbe46ca8a30d9ebb66853027a"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "3841b0bc35cd184a7eb8858d7bd469f5"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7df49ea7fc73913e7f484249955dcdd0",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8"
      ],
      0,
      "e1b8f930caddf3cd2039203c12903f20"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_60576b95f347dd5c19dd913d07f5962b",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "89360e458ca5c1f7b487620339fa0d0d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Ghash_extra_bytes",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_8695aeca6413b3389af2aeb2034d97e5", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.l_imp",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq4",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_680bf27842974c6d89eb3874eabb3527",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_7df49ea7fc73913e7f484249955dcdd0",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_Prims.eq2",
        "typing_Prims.l_and", "typing_Prims.l_imp",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Words.Seq_s.four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "e2e014676e611df27e8040171bc3ae25"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.State.update_reg", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "42aaf1c0dee91f43e04e8509c874a1c9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_interpretation_Tm_arrow_b4b6e62fc3c0ff34812bab4dbf392b9d",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Ghash_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "a8a658b3a50f86e786b7ae974f26c39a"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "b1ce4b18fdeac7b1cbc4b377ed682d16"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_extra_bytes",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "4917de756037bde856c01a1522ec0db5"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_a9898b82dcacdbda20c3ded04d51f788",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "533e9b97ca5c4ccd0042cca92a939bc8"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_extra_bytes",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Def.Words_s.Mkfour", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and", "equation_Prims.min",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCTR_BE.gctr_partial_def",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.AES.GCTR_BE.gctr_partial",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_03a7ba67a88e46b4d32645e45347994e",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c2b7bd5035e17f5159a083b0ee8350a8",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.AES.GCTR_BE.gctr_partial_def",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.upd",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "94cef6e1c39ed9ee354dd59fd5f60497"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "576fe5e6b8118494b54339baae7abec6"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_interpretation_Tm_arrow_b4b6e62fc3c0ff34812bab4dbf392b9d",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "5e71feb252b2fb403b16538e741f2226"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "673ab49f8b3c8478e4940b54f73f36f4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "b2t_def", "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "l_quant_interp_68a7a6cd9c7e4f0bcf225becf3d1d90b",
        "lemma_FStar.Seq.Base.lemma_init_len", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8"
      ],
      0,
      "432e3c22e2375671d18a82d0d9fc9b2f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_512b2a7ed867bd9ee4f6cd66818dd125",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "8e0618d391beae7816ead4f0cbff9419"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_auth",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_8695aeca6413b3389af2aeb2034d97e5", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_590a20fc3793492040f04629af33ddc5",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_82242cf3e50ba42e7f7875a38f69d529",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_416853ec110185d89293f64e38eaa213",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_d9556b277f0023efa749a705df13ad80",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_and", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_165d3b7c943271f88b5cbe2954f5c55c",
        "interpretation_Tm_abs_22231a29b2f76b2c2b3a903498872c4c",
        "interpretation_Tm_abs_2a44555565fda8cfd6e3dc8bb8f8a12b",
        "interpretation_Tm_abs_319fc2dc648cd3363f217e5aef225abc",
        "interpretation_Tm_abs_7334a02c8ec7231853de3da446a3ef60",
        "interpretation_Tm_abs_8bc1af140a3bc368000ea7d2d014f4a0",
        "interpretation_Tm_abs_bc4ca12973bfec608cc045638c35cacc",
        "interpretation_Tm_abs_cd0c003d7283082f2c2b445ac70b3bd9",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.seq",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Tm_abs_165d3b7c943271f88b5cbe2954f5c55c",
        "typing_Tm_abs_8bc1af140a3bc368000ea7d2d014f4a0",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "403abfe6fea616637ab5f7af9454ca66"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_590a20fc3793492040f04629af33ddc5",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_82242cf3e50ba42e7f7875a38f69d529",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_416853ec110185d89293f64e38eaa213",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_d9556b277f0023efa749a705df13ad80",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_28e05d623d3b37ae923f57a4cf7d7fff",
        "interpretation_Tm_abs_a80c3c24e7b09baf628a9b638224d5ff",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.seq",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Tm_abs_28e05d623d3b37ae923f57a4cf7d7fff",
        "typing_Tm_abs_a80c3c24e7b09baf628a9b638224d5ff",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "775e4e7e73da3e4c7d9ed12acbe57d8d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_8695aeca6413b3389af2aeb2034d97e5", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_typing_intro_Vale.Def.Words_s.Mkfour@tok", "eq2-interp",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_auth",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_28e05d623d3b37ae923f57a4cf7d7fff",
        "interpretation_Tm_abs_a80c3c24e7b09baf628a9b638224d5ff",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "l_and-interp", "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.AES.GHash_BE.ghash_incremental0",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "d54f9e44c31eff71844b0158df287764"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "ab523932ed3b392e443c9e0fce47aacd"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.GCM_BE_s.supported_iv_BE",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok", "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_790b1f5c6fe348c8becdc4a6cbc27e78",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.pow2",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "b30726b92f1d95107378edd595b07c27"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "37c277e28172ff61be2a84678f2b7502"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_8695aeca6413b3389af2aeb2034d97e5", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.GCM_BE.set_to_one",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat64",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_bc4ca12973bfec608cc045638c35cacc",
        "interpretation_Tm_abs_cd0c003d7283082f2c2b445ac70b3bd9",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Int.pow2_values", "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c2b7bd5035e17f5159a083b0ee8350a8",
        "refinement_interpretation_Tm_refine_d02febb7b7f7242185cbf5632703f8d4",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.GCM_BE_s.compute_iv_BE",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "4f980099b815444b597852ac7bf0814f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "c4f1289f8cecc1fbaf368dc04be22da8"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "482a11b1039b4bd3918b9cd6b39246d5"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "a443767353df981fcd8565d54d679785"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_int_at_least",
        "kinding_Vale.Def.Words_s.four@tok", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_4f1d92a9a3f071e1fa3026ba94fce31c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.length", "typing_Vale.Def.Words_s.nat32"
      ],
      0,
      "6d02dd66d6f26200a5d824c49346d3c3"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_46ff6d8d751402efe510a0bb759a6cfb",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "c6225a881ea96b69e2dbbb4de1957338"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_8695aeca6413b3389af2aeb2034d97e5", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_49a9cb48779b336b7a282ddef7a5b18d",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_7a68dc4f2d958b7b2140865703cc3d12",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_968de98b92332579ee02186c292ff1dc",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_416853ec110185d89293f64e38eaa213",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_d9556b277f0023efa749a705df13ad80",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_192",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Def.Words_s.Mkfour",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_elim_Vale.PPC64LE.Machine_s.Mkxer_t",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE.empty_seq_quad32",
        "equation_Vale.AES.GCTR_BE.inc32lite",
        "equation_Vale.AES.GCTR_BE_s.gctr_encrypt_block",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.add_wrap_quad32",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0",
        "equation_Vale.Def.Types_s.add_wrap",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.xer_t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_0288f40ee9e9a917413379609cd822d4",
        "interpretation_Tm_abs_05d90a8ff8922f2b2a2b5c762697b084",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_2000b704a136df939f73c456114f5c41",
        "interpretation_Tm_abs_2e120acc42c84c76b8da04f0dfd5f499",
        "interpretation_Tm_abs_4c7846e03bc48efb5985fc4ead3c390a",
        "interpretation_Tm_abs_4dfb9e7191364ed7bb723cd40599d38d",
        "interpretation_Tm_abs_4f26bc724e9c2a6bcf45d9122ecb6be0",
        "interpretation_Tm_abs_508a8526cadbdf22a6ddd40e98c26a26",
        "interpretation_Tm_abs_5762af4e6c84475fe9420ad5bc3f9493",
        "interpretation_Tm_abs_57cd66b9cce38d6ce71debc8eafd9146",
        "interpretation_Tm_abs_7361a9295ece3efaa1895017814ede6c",
        "interpretation_Tm_abs_89ee95524973a87b824684a507f28954",
        "interpretation_Tm_abs_ae29e767e69e27d0c9eee107b5c2aa52",
        "interpretation_Tm_abs_b963fc2be47e626c449d3f6e4cdafdf3",
        "interpretation_Tm_abs_bf432d4a1b5e7f42bfdb2786a736ad96",
        "interpretation_Tm_abs_cc6e0a71e289d2296269393024182490",
        "interpretation_Tm_abs_d14eb20436e402f4a38813f59b88624a",
        "interpretation_Tm_abs_d5483ea6eb394cbaaa5c660e96070eaa",
        "interpretation_Tm_abs_d688e49d7c6995d94f5376c24451353d",
        "interpretation_Tm_abs_d74ab489d3cb4a6d70e0d0b06a8d9f58",
        "interpretation_Tm_abs_dd2a0b7e806e2536077d399b92d34586",
        "interpretation_Tm_abs_e7f243dae3fb078284212c4049ef2d5a",
        "interpretation_Tm_abs_f87353ca10dd6c8ea2e13a97ccecd02e",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_Lib.IntTypes.pow2_2", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_refl",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_9b1fecec286935804112560eae531c1e",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_cbfdc61523753ca21657fd0c3a1f3fa2",
        "refinement_interpretation_Tm_refine_d04def776e5596c39a3d1bed8fa82aab",
        "refinement_interpretation_Tm_refine_e0bd5066e6f9a805c820001cd5fbd850",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Tm_abs_410558b89b4380fb52bb350f651654a5",
        "typing_Tm_abs_4dfb9e7191364ed7bb723cd40599d38d",
        "typing_Tm_abs_7361a9295ece3efaa1895017814ede6c",
        "typing_Tm_abs_bf432d4a1b5e7f42bfdb2786a736ad96",
        "typing_Tm_abs_f87353ca10dd6c8ea2e13a97ccecd02e",
        "typing_Vale.AES.GCTR_BE.empty_seq_quad32",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE_s.inc32",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.add_wrap_quad32",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__hi3",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo1",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "dea420223d0cee50624a83ecfe63299f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_968de98b92332579ee02186c292ff1dc",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_ae29e767e69e27d0c9eee107b5c2aa52",
        "interpretation_Tm_abs_b963fc2be47e626c449d3f6e4cdafdf3",
        "interpretation_Tm_abs_d14eb20436e402f4a38813f59b88624a",
        "interpretation_Tm_abs_d5483ea6eb394cbaaa5c660e96070eaa",
        "interpretation_Tm_abs_dbd0023f39ecbcb28d83f8f2ac9ae8a0",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_d04def776e5596c39a3d1bed8fa82aab",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Tm_abs_1703ddbf8b41ad1a6329cc847743b093",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "6cdcc9e6ab7bf8938c978b2088ba7577"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_interpretation_Tm_arrow_b4b6e62fc3c0ff34812bab4dbf392b9d",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_6c428e93ebf4b722d16a52da60b36661",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_1703ddbf8b41ad1a6329cc847743b093",
        "interpretation_Tm_abs_2000b704a136df939f73c456114f5c41",
        "interpretation_Tm_abs_7361a9295ece3efaa1895017814ede6c",
        "interpretation_Tm_abs_ae29e767e69e27d0c9eee107b5c2aa52",
        "interpretation_Tm_abs_b2c634603736f20aed72251807560cd3",
        "interpretation_Tm_abs_b963fc2be47e626c449d3f6e4cdafdf3",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_d14eb20436e402f4a38813f59b88624a",
        "interpretation_Tm_abs_d5483ea6eb394cbaaa5c660e96070eaa",
        "interpretation_Tm_abs_d55be53f807d608d206bdbc433d6ff19",
        "interpretation_Tm_abs_dbd0023f39ecbcb28d83f8f2ac9ae8a0",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_4a956104e4b7ab4b463bb0ea768e3995",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.AES.PPC64LE.GCMencrypt.va_code_Gcm_blocks",
        "typing_Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Def.Words_s.nat8", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_typing"
      ],
      0,
      "82df8ff045391dc73932be6a8d141f0d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "0f7cc7a2181aa556db518020d0100c7e"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_25f2908a0e4d752c1c644d06da1d13d6",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6a6de4d894b3ae8200925ac1bb0a258b",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "a09a1987c22419bc046b94062b59a5db"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_25d72640795bcb61cecc5d3525b141fe",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "2c733efc060d53a1bd625d1fb6d88157"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_wrapped",
      2,
      100,
      100,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_Prims.eq2",
        "equation_Prims.l_and", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "interpretation_Tm_abs_2e120acc42c84c76b8da04f0dfd5f499",
        "interpretation_Tm_abs_4c7846e03bc48efb5985fc4ead3c390a",
        "interpretation_Tm_abs_508a8526cadbdf22a6ddd40e98c26a26",
        "interpretation_Tm_abs_5762af4e6c84475fe9420ad5bc3f9493",
        "interpretation_Tm_abs_57cd66b9cce38d6ce71debc8eafd9146",
        "interpretation_Tm_abs_79503a8182890a889382fcfc8d37af67",
        "interpretation_Tm_abs_b51ccd16858a3e573fad96327eea51b8",
        "interpretation_Tm_abs_c392af231673fe003754a87dffeabd28",
        "interpretation_Tm_abs_d74ab489d3cb4a6d70e0d0b06a8d9f58",
        "interpretation_Tm_abs_d7815527eb8a25f5fd8d02e23dcb66ff",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Int.pow2_values", "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "dfc71a7b9b7f49cc6202488561c868da"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "927d2bd7852a322f9bf90e3b25ff7b6b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_interpretation_Tm_arrow_b4b6e62fc3c0ff34812bab4dbf392b9d",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_6c428e93ebf4b722d16a52da60b36661",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_wrapped",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "unit_typing"
      ],
      0,
      "a5269452255ccad83564469b44e18d96"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "1014972d192ef7f53daa7977a00d485b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_req_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "993e88860707120310479e7933db86c7"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_ens_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_req_Gcm_blocks_stdcall",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "03017c7b58f7454f14a84cb5babb77d2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "b7863fdf135fad0a6fd7b7851de8cec7"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2af2f5d1a6f63d525b7cc94bf9e928c1",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "d7a88bc680ed8d83cf69d547bb95f2b2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_stdcall",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "disc_equation_FStar.Pervasives.Native.None", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_none",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset128",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.buffer_info_has_id",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64_128",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_1edbb6432d9aae01b9baf25a3e5f5ab8",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_66c8db51c6553d8f0f383ee953ca2d37",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c2b7bd5035e17f5159a083b0ee8350a8",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Prims.l_and",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.AES_BE_s.key_to_round_keys_word",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Def.Words_s.nat8", "typing_Vale.Lib.Map16.eta",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.loc_union",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_Sems.stack_to_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "e08d84e048e7244a4e24187a128ac798"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "0c96a1efec88df0839be294b63bcd015"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_stdcall",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stackTaint",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1", "unit_typing"
      ],
      0,
      "4ee0535cc4996cd52bc2b994547c88ea"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "413a9baa8ca6c743d1efc7e898b1446d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_req_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "2516a320d30ba95cb12fc949657b3f30"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_iv_stdcall",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "97bdbe6de2f5ea647600e9b67bc7c157"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "ea6142c295bc03a09e73d00ea273b295"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv_stdcall",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "data_elim_Prims.Cons",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "eq2-interp", "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Vale.AES.GCM_BE_s.supported_iv_BE",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_1edbb6432d9aae01b9baf25a3e5f5ab8",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_44e1b3f80b880cf4dae3233c4ac7cd9a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_790b1f5c6fe348c8becdc4a6cbc27e78",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.AES.GCM_BE_s.compute_iv_BE",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "452a5976572f3c9510ca9bd666187ad7"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_50804f875ccbc6826e85364cf89715d5",
        "FStar.Seq.Base_interpretation_Tm_arrow_14c84956e8b59092b61b1d57a9b4abfd",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_40010472284eb8c91681f1af22dddcf4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8b8cc025b278a5793e7bf2addcf311aa",
        "refinement_interpretation_Tm_refine_93ab65736391883123761d1ec2c7d4b6",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_132b15bf263840a6e1750bcb9a657479",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "efb8b080b7678f49d71b2de91b1c9423"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_1ee0f335fe1aa41ace1c2706a67a8142",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv_stdcall",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3d9eb19d6e5275b6ca9df9644be04e61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "18e11a2c12154499258b9559c24a115b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "01770cba232dfdcc81f4ab328b42032a"
    ]
  ]
]