[
  "bb8854db01144587b2af146759107206",
  [
    [
      "Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "3867741c46b4b1baacc92b2817e6a798"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.PPC64LE.Machine_s.Block",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "disc_equation_Prims.Cons",
        "disc_equation_Vale.PPC64LE.Machine_s.Block",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.pos", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.state_inv",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Equality", "proj_equation_Prims.Cons_@hd",
        "proj_equation_Prims.Cons_@tl",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Block_@block",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@block",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ins",
        "projection_inverse_Vale.PPC64LE.Machine_s.Block_@t_ocmp",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_vec"
      ],
      0,
      "7fd67326ceb8f648f8304405c42ddf2d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Load_one_lsb",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.State.update_vec", "unit_typing"
      ],
      0,
      "9e608c08abc7287e6dba0c578bc2449a"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Load_one_lsb",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "92a575a7148b637643e3b391587c0fb1"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_65ebf9ed9fd29fc762805ed0f14bb9ef"
      ],
      0,
      "f0bd2bb9c03175928c13bba18138252b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks128",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.nat",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_buffer_addr",
        "lemma_Vale.PPC64LE.Memory.modifies_buffer_readable",
        "lemma_Vale.PPC64LE.Memory.modifies_same_heaplet_id",
        "lemma_Vale.PPC64LE.Memory.modifies_valid_taint",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_Prims.eq2", "typing_Prims.int", "typing_Prims.l_and",
        "typing_Prims.l_imp",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE.inc32lite",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.eta",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "ef63edf7f49c8165bdc6998690c845b0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@query", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "d394bb614ca85496960a225e72e52378"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks128",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "4ce768a03a0588bcdf68c87670ecaa77"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks128",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "1d6d87157e7d7ebbea3e2ee4ca95cc78"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eq2", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat", "equation_Prims.pos",
        "equation_Prims.squash",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_4",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GHash_BE.ghash_incremental0",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "70cefe74577b6a1473e7356e424b1d09"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_auth_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_3",
        "projection_inverse_FStar.Pervasives.Native.Mktuple4_@_4",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "b845298777ba65042c3afc7187477042"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_auth_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "ddc696316e560a750a0981f3ae2160d6"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "6a09b6876ea41b4d67023eb465a9ae77"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "85e46f98c3a7433e2353d1ab07284b29"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_make_length_quad",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap", "eq2-interp",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion",
        "unit_typing"
      ],
      0,
      "68897cd4bbeadc56c4dc23b5bdfc3fb0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_make_length_quad",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "925e3908b1f4cf89a0fefdb5bdbd6bd9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_make_length_quad",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_make_length_quad",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "7ec6616ded0cbf5ed34fec756773d8d2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_make_length_quad",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "6e6c668537e6a249130f1b6c4dd3efb4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Vale.Def.Words_s.two",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_2a8e89f934bafac1d84d49842fde70cf",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5d073749e68b6ec3f1efce103bc2bd1a",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.length",
        "typing_Prims.pow2", "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree"
      ],
      0,
      "663384db0a63a344e769a7c85edd7a97"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1e123e5188866717aa1b26a2aa77ee70",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.Types.be_quad32_to_bytes"
      ],
      0,
      "3f1f4680cc83ece077cc15cfd6de55d2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_pad_to_128_bits",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat64",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "l_and-interp", "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@a",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_507ed4c55777344d5e25694fb1d7ecf2",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_Prims.l_and",
        "typing_Prims.pow2", "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Types_s.be_bytes_to_quad32",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion",
        "unit_typing"
      ],
      0,
      "0713fb949cc4565bde57f59ecb3f3a4d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.Types.be_quad32_to_bytes"
      ],
      0,
      "fc999f155df4e5f48ec7bb9119db7ca4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_pad_to_128_bits",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.State.update_reg", "unit_typing"
      ],
      0,
      "6ed982952b258a18428768f57eb20243"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_pad_to_128_bits",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "8742e733e991c4ba01706b01d37482d0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8"
      ],
      0,
      "4c49bca8713db66df21091f96c0d3ec9"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a466bd7b5a085febcb3963ea0bd70d27",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "bd8a485e4b6090938ca026c487c0b6e7"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Ghash_extra_bytes",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.l_imp",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq4",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_dacb21c1a552ec7c7501f2a99ed39cf2",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_Prims.eq2",
        "typing_Prims.l_and", "typing_Prims.l_imp",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Words.Seq_s.four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "785911de0dfb256d8813b9f9a7c19e40"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.State.update_reg", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "280ad76738f264d8e04955f866071c2e"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Ghash_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "54ebf3ae59a953ac9fa76e17d6d8f2b0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Ghash_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "8bcd6e354713ab86e936620fbec9efd1"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_extra_bytes",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "e744150eb49cddfc497582674653eece"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_283991827ef9825a287718579cc14daa",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "dc0d7c7cf8e49dda850e21405ff2bed1"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_extra_bytes",
      2,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Def.Words_s.Mkfour", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and", "equation_Prims.min",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCTR_BE.gctr_partial_def",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.AES.GCTR_BE.gctr_partial",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_04e7de6d84df95d8010bdff92963f9d0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3812239f7745dcef43e09943bec4b665",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.AES.GCTR_BE.gctr_partial_def",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "89511aaf4f6b26eb7d8a7b086b46212a"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "420cd554352b30bae0fc63f5ea29c2ca"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "bd2da85b4f863a008bce1789590044ab"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_extra_bytes",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "8dc06d3274fd21d7ee63fd564185f6d5"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "b2t_def", "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "l_quant_interp_68a7a6cd9c7e4f0bcf225becf3d1d90b",
        "lemma_FStar.Seq.Base.lemma_init_len", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8"
      ],
      0,
      "fd784b2a5e3193c620b0958b295fdce5"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_376f493a45c18b882021e4691fc63fc0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "be517bfaeadb76da54cd6b7ca07db672"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_auth",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_590a20fc3793492040f04629af33ddc5",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_82242cf3e50ba42e7f7875a38f69d529",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_and", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2075c1923461ac1b1c32e5ba2ccb9f3a",
        "interpretation_Tm_abs_329ac3260c8165373aa2447b4befe268",
        "interpretation_Tm_abs_415a2058cb3a6bd00dacb8e4e2dcff9b",
        "interpretation_Tm_abs_4de08529f6f6248bc5caefa77888ab6f",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_908a22eca95fc744c3eb5c3350b37dc2",
        "interpretation_Tm_abs_a53539b615d95306b65e1734843bdf44",
        "interpretation_Tm_abs_a6a4175f6580483e1b864302c4924c48",
        "interpretation_Tm_abs_bbee0af8183381e29730e56fb8e3771e",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.seq",
        "typing_Tm_abs_2075c1923461ac1b1c32e5ba2ccb9f3a",
        "typing_Tm_abs_4de08529f6f6248bc5caefa77888ab6f",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion"
      ],
      0,
      "ac009996bc75133ded201763773f3113"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_590a20fc3793492040f04629af33ddc5",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_82242cf3e50ba42e7f7875a38f69d529",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_19a001846697873744f0f4044a28fd11",
        "interpretation_Tm_abs_eff8f26dd17551d23c8d67f4a40c0897",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.seq",
        "typing_Tm_abs_19a001846697873744f0f4044a28fd11",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_eff8f26dd17551d23c8d67f4a40c0897",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "3b2b36a48a12fbbf510f407939f27c70"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_typing_intro_Vale.Def.Words_s.Mkfour@tok", "eq2-interp",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_auth",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_19a001846697873744f0f4044a28fd11",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_eff8f26dd17551d23c8d67f4a40c0897",
        "l_and-interp", "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.AES.GHash_BE.ghash_incremental0",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs"
      ],
      0,
      "bd876997b845d914ed804004e17e07ac"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_auth",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "273c78ae3ffdfbfeaf85ecf2477c8a63"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.GCM_BE_s.supported_iv_BE",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok", "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_790b1f5c6fe348c8becdc4a6cbc27e78",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.pow2",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "7a38ed3bd0ea4615b410f9bdbb6bd014"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "19763ecc62fc22d054764f81ded1f06c"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.GCM_BE.set_to_one",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat32",
        "equation_Vale.PPC64LE.Machine_s.int_to_nat64",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_415a2058cb3a6bd00dacb8e4e2dcff9b",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_908a22eca95fc744c3eb5c3350b37dc2",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Int.pow2_values", "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_04e7de6d84df95d8010bdff92963f9d0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_30c926ebf383bedbae82319bb48dcf51",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCM_BE_s.compute_iv_BE",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.int_to_natN",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "516d246fafc7c321aa44a242b70b2ef6"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "fad9022ff6f52bd2d37da8d8ab549187"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "6e434cc01c13f32d3d55cf411023fe0d"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_iv",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "3a2826b4dd49068592427c56ab1f6ecf"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_int_at_least",
        "kinding_Vale.Def.Words_s.four@tok", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_4f1d92a9a3f071e1fa3026ba94fce31c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.length", "typing_Vale.Def.Words_s.nat32"
      ],
      0,
      "1c38bc66fd9166653dd4d378eedec72f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_a5be77d8fa213edb66c4eb71a4e3e3f7",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "9d545f18d1080cd6f478f08925ca411b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_6964411159f1ee089e74eba93d0caa1f",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_6cbbdbebc2e93b07a2f120a3dc693d1f",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_d992dd65527ccaeb091554f95fa05088",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Def.Words_s.Mkfour",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_elim_Vale.PPC64LE.Machine_s.Mkxer_t",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE.empty_seq_quad32",
        "equation_Vale.AES.GCTR_BE.inc32lite",
        "equation_Vale.AES.GCTR_BE_s.gctr_encrypt_block",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.add_wrap_quad32",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0",
        "equation_Vale.Def.Types_s.add_wrap",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.xer_t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_1043c53e69875c91736b4e78b463e114",
        "interpretation_Tm_abs_1154d31babaf6cbc13ea2678abd85ba3",
        "interpretation_Tm_abs_1bea9775e2877d6db880279d5568f22f",
        "interpretation_Tm_abs_208c28e88887524bbef4f0effbfc40d3",
        "interpretation_Tm_abs_29071336af5602a4bbc74abd577c7ffa",
        "interpretation_Tm_abs_2b785d34d4f687f4c940d68a4b57fd8e",
        "interpretation_Tm_abs_35fa43af42db876c29c2a4dd93270ce6",
        "interpretation_Tm_abs_3ca3051c55b6ad0f6c3c2603fcf1fb7e",
        "interpretation_Tm_abs_3ccfcd1e8e52dcd91b166eecc8a86682",
        "interpretation_Tm_abs_42308a4d17416ad95afbc44a00f953ea",
        "interpretation_Tm_abs_58655bc4dc7fb66ae76aeb78dca3ec32",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_74388f1edf25ef1d7103ff508192224a",
        "interpretation_Tm_abs_80bf023694e25884db3977e43f414362",
        "interpretation_Tm_abs_81d8cff1243634746d42743c44fdcbb2",
        "interpretation_Tm_abs_823d5ec4269986543601e061f763f397",
        "interpretation_Tm_abs_86b3877609f8f4fbf52bf923dc1cc20a",
        "interpretation_Tm_abs_8f672847beceb442e6966989098060d6",
        "interpretation_Tm_abs_938acf8fd57fd63c32d1091bef3f22e6",
        "interpretation_Tm_abs_b6f471d42c95286277906d74809e3eff",
        "interpretation_Tm_abs_bc4e9b7149b00e6788eb07cb9d3491f7",
        "interpretation_Tm_abs_c772eb2d160a4def62a2642f22943c8a",
        "interpretation_Tm_abs_f591239c700cd38093fc02705dcd3232",
        "interpretation_Tm_abs_fd5ce07eea7ccaf8bd74a3127f0e7003",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_refl",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@a",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_0ce91af3d6762ea7d913b870f9e33a01",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_e88e14f7f21c8c5fa98a9920491df749",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_1bea9775e2877d6db880279d5568f22f",
        "typing_Tm_abs_29071336af5602a4bbc74abd577c7ffa",
        "typing_Tm_abs_2b785d34d4f687f4c940d68a4b57fd8e",
        "typing_Tm_abs_3ccfcd1e8e52dcd91b166eecc8a86682",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_9e9ba67b0bb88bf2b8e9e3d9cce230cf",
        "typing_Vale.AES.GCTR_BE.empty_seq_quad32",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE_s.inc32",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "b00207722482cc4825fec5ddc7edc0b1"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_6964411159f1ee089e74eba93d0caa1f",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_34b22d54fe41d35434ae686a1e55dc3e",
        "interpretation_Tm_abs_3ca3051c55b6ad0f6c3c2603fcf1fb7e",
        "interpretation_Tm_abs_823d5ec4269986543601e061f763f397",
        "interpretation_Tm_abs_938acf8fd57fd63c32d1091bef3f22e6",
        "interpretation_Tm_abs_fd5ce07eea7ccaf8bd74a3127f0e7003",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_e88e14f7f21c8c5fa98a9920491df749",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5531192653a5a1a000d0f52d84649f8a",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "c9d003bb6f1c2251aa30a4dff9728d18"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_6c428e93ebf4b722d16a52da60b36661",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2d43e392db60cb4106d2c17336becaaf",
        "interpretation_Tm_abs_34b22d54fe41d35434ae686a1e55dc3e",
        "interpretation_Tm_abs_3ca3051c55b6ad0f6c3c2603fcf1fb7e",
        "interpretation_Tm_abs_3ccfcd1e8e52dcd91b166eecc8a86682",
        "interpretation_Tm_abs_5531192653a5a1a000d0f52d84649f8a",
        "interpretation_Tm_abs_74388f1edf25ef1d7103ff508192224a",
        "interpretation_Tm_abs_823d5ec4269986543601e061f763f397",
        "interpretation_Tm_abs_938acf8fd57fd63c32d1091bef3f22e6",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_fb166ca37fe0e638949a9c82d1e5b5bb",
        "interpretation_Tm_abs_fd5ce07eea7ccaf8bd74a3127f0e7003",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1718989131203c73683bc4e8ec180e2a",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "typing_Vale.AES.PPC64LE.GCMencrypt.va_code_Gcm_blocks",
        "typing_Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "unit_typing"
      ],
      0,
      "8b32ad2bd5dd6cf4f9ac5612a8275a39"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "29646ab369d4e7c4ca2dbc9c95f0bb0b"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_ae393b922d6c5aa634d3c5c4145151f4",
        "refinement_interpretation_Tm_refine_c03e96815cbf53e032d5e41bead20cc3",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "044b34f909a2b0ecc8b33c7a759d91f4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f0dd387267c66d0168038049f69c888",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "aa9cd51388a8fe8cfbfc2350f19a56d6"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_wrapped",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_a3b334cd5608e1f249abef5f42d6f0df",
        "Vale.AES.PPC64LE.GCMencrypt_interpretation_Tm_arrow_c2af66041f2f839dc245fa64783603ee",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.l_and",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_232686d2a2a2438f15364826a9df42ef",
        "interpretation_Tm_abs_42308a4d17416ad95afbc44a00f953ea",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_80bf023694e25884db3977e43f414362",
        "interpretation_Tm_abs_81d8cff1243634746d42743c44fdcbb2",
        "interpretation_Tm_abs_86b3877609f8f4fbf52bf923dc1cc20a",
        "interpretation_Tm_abs_8f672847beceb442e6966989098060d6",
        "interpretation_Tm_abs_a009870cce21538bbef140c2feba891c",
        "interpretation_Tm_abs_a6fbf8ad43b64603fe6de83808ba5e08",
        "interpretation_Tm_abs_b6f471d42c95286277906d74809e3eff",
        "interpretation_Tm_abs_d44a215ea9ad2c2c290b79568f4bf9fc",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Int.pow2_values", "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_8f672847beceb442e6966989098060d6",
        "typing_Tm_abs_b6f471d42c95286277906d74809e3eff",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "2b52a93660a4e9c3b1a33c3454322b89"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.AES.AES_common_s.algorithm",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "0005dda684882dbe1e2a88a4d1194ecb"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_6c428e93ebf4b722d16a52da60b36661",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_wrapped",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Lib.Map16.map16",
        "equation_Vale.Lib.Map16.map2", "equation_Vale.Lib.Map16.map4",
        "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "unit_typing"
      ],
      0,
      "e9c809deb5b1ea7d69e03f860187ea66"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_wrapped",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "f628708950038ab8d6b66cc5006578a2"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_req_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "d3832c13697b064eb03d1942924e31a3"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_ens_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_req_Gcm_blocks_stdcall",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "402e56e97532feff0d62c6ad5de192b0"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "56fadc220434b40d3e1b0216311c7658"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2fce614851e8aa1c566787ad0ba0eab0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "2d0b1daa5f6b512241ec429bc527dd84"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Gcm_blocks_stdcall",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "disc_equation_FStar.Pervasives.Native.None", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_none",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset128",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.buffer_info_has_id",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64_128",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_04e7de6d84df95d8010bdff92963f9d0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_66c8db51c6553d8f0f383ee953ca2d37",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_b896ddcb089d4c015e97126ba3dd8bdd",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Prims.l_and",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.AES_BE_s.key_to_round_keys_word",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Def.Words_s.nat8", "typing_Vale.Lib.Map16.eta",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.loc_union",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_Sems.stack_to_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "9060636cc4052bd89676f96b1b86f1c4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "0d8d099229455c94a890115eedc0e400"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Gcm_blocks_stdcall",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stackTaint",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1", "unit_typing"
      ],
      0,
      "2c5e10fd0347604951e52341bcf217f4"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Gcm_blocks_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "88ab771e7b308a5a837c3ee289d62d6f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_req_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "fc7eef3401b3c3ad812dfefeb24b687e"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_qcode_Compute_iv_stdcall",
      1,
      10,
      10,
      [ "@query" ],
      0,
      "3487af4db06782fb5419793fa5ff635f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "ee50caf9742805f31db808165b030e5f"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_lemma_Compute_iv_stdcall",
      2,
      10,
      10,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_elim_FStar.Pervasives.Native.Mktuple2", "data_elim_Prims.Cons",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "eq2-interp", "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.logical", "equation_Prims.nat",
        "equation_Vale.AES.GCM_BE_s.supported_iv_BE",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_790b1f5c6fe348c8becdc4a6cbc27e78",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_b896ddcb089d4c015e97126ba3dd8bdd",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_Prims.eq2",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCM_BE_s.compute_iv_BE",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "bbc6d71b7aab35e101aef12d8100b7e7"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Ghost_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "17a5f2a02c7d4871763079391e22a887"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_wpProof_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_Vale.Arch.HeapImpl.Mkvale_full_heap",
        "data_elim_Vale.PPC64LE.Machine_s.Mkstate",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.va_wp_Compute_iv_stdcall",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Lib.Map16.map16", "equation_Vale.Lib.Map16.map2",
        "equation_Vale.Lib.Map16.map4", "equation_Vale.Lib.Map16.map8",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "2b90bc9e4427d4eecdcdc9d0ee31dc0e"
    ],
    [
      "Vale.AES.PPC64LE.GCMencrypt.va_quick_Compute_iv_stdcall",
      1,
      10,
      10,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "281ebfc9be46030c537591e70ed1a845"
    ]
  ]
]