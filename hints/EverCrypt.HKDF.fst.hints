[
  "n¼?_˜Ð¾ÆwáŠBŒé)\u0011",
  [
    [
      "EverCrypt.HKDF.key_and_data_fits",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W32",
        "constructor_distinct_FStar.Integers.W64",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_224",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "constructor_distinct_Tm_unit",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W32@tok",
        "equality_tok_FStar.Integers.W64@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.bits",
        "equation_Lib.IntTypes.minint", "equation_Lib.IntTypes.unsigned",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Spec.AES.gf8",
        "equation_Spec.AES.irred", "equation_Spec.GaloisField.gf",
        "equation_Spec.Hash.Definitions.block_length",
        "equation_Spec.Hash.Definitions.block_word_length",
        "equation_Spec.Hash.Definitions.less_than_max_input_length",
        "equation_Spec.Hash.Definitions.max_input_length",
        "equation_Spec.Hash.Definitions.word_length",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Spec.Hash.Definitions.hash_alg",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_Lib.IntTypes.pow2_127", "primitive_Prims.op_Addition",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_Lib.IntTypes.bits", "typing_Prims.pow2",
        "typing_Spec.AES.gf8", "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_Spec.Hash.Definitions.less_than_max_input_length",
        "typing_Spec.Hash.Definitions.max_input_length",
        "typing_tok_Lib.IntTypes.U8@tok"
      ],
      0,
      "027321849f8e7843d317af82b647fa6f"
    ],
    [
      "EverCrypt.HKDF.hash_block_length_fits",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Hacl.Spec.SHA2.Vec_pretyping_ef9d7cf021ba37864f0e1ecf8fb737f1",
        "Spec.Hash.Definitions_pretyping_332103d8b337802efb5758d608edf05f",
        "bool_inversion", "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W32",
        "constructor_distinct_FStar.Integers.W64",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_FStar.Integers.Winfinite",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Hacl.Spec.SHA2.Vec.M128",
        "constructor_distinct_Hacl.Spec.SHA2.Vec.M32",
        "constructor_distinct_Lib.IntTypes.S128",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S64",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.Hash.Definitions.MD5",
        "constructor_distinct_Spec.Hash.Definitions.SHA1",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_224",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_384",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "data_typing_intro_Hacl.Spec.SHA2.Vec.M128@tok",
        "data_typing_intro_Spec.Hash.Definitions.SHA2_256@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W32@tok",
        "equality_tok_FStar.Integers.W64@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_FStar.Integers.Winfinite@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_Hacl.Hash.Definitions.get_alg",
        "equation_Hacl.Hash.Definitions.impl_state_length",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.maxint",
        "equation_Lib.IntTypes.minint", "equation_Lib.IntTypes.unsigned",
        "equation_Prims.nat", "equation_Prims.nonzero", "equation_Prims.pos",
        "equation_Spec.AES.gf8", "equation_Spec.AES.irred",
        "equation_Spec.GaloisField.gf",
        "equation_Spec.Hash.Definitions.block_length",
        "equation_Spec.Hash.Definitions.block_word_length",
        "equation_Spec.Hash.Definitions.hash_length",
        "equation_Spec.Hash.Definitions.hash_word_length",
        "equation_Spec.Hash.Definitions.is_keccak",
        "equation_Spec.Hash.Definitions.is_md",
        "equation_Spec.Hash.Definitions.is_shake",
        "equation_Spec.Hash.Definitions.max_input_length",
        "equation_Spec.Hash.Definitions.state_word_length",
        "equation_Spec.Hash.Definitions.word_length",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Spec.Hash.Definitions.hash_alg",
        "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_Lib.IntTypes.pow2_127",
        "lemma_Spec.Hash.Definitions.md_alg_is_maxed",
        "primitive_Prims.op_Addition", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_0766302b68bb44ab7aff8c4d8be0b46f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "refinement_kinding_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "typing_Spec.AES.gf8", "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_Spec.Hash.Definitions.block_length",
        "typing_Spec.Hash.Definitions.is_md",
        "typing_Spec.Hash.Definitions.max_input_length"
      ],
      0,
      "13c16747e2e78b9b0ca41a344273f65e"
    ],
    [
      "EverCrypt.HKDF.extract_st",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Lib.IntTypes.uint8",
        "equation_Lib.IntTypes.unsigned", "equation_LowStar.Buffer.buffer",
        "equation_LowStar.Buffer.trivial_preorder",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_Spec.AES.gf8", "equation_Spec.AES.irred",
        "equation_Spec.Agile.HKDF.extract_ikm_length_pred",
        "equation_Spec.Agile.HMAC.keysized", "equation_Spec.GaloisField.gf",
        "equation_Spec.Hash.Definitions.block_length",
        "equation_Spec.Hash.Definitions.less_than_max_input_length",
        "function_token_typing_Lib.IntTypes.uint8", "int_typing",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_1f5aa884534f963fe5cba3a65aa57c18",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowStar.Buffer.trivial_preorder",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_LowStar.Monotonic.Buffer.length", "typing_Spec.AES.gf8",
        "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_Spec.Hash.Definitions.less_than_max_input_length"
      ],
      0,
      "9930b3993000cb6182b4bf187aa69d60"
    ],
    [
      "EverCrypt.HKDF.expand_st",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_FStar.Integers.W16",
        "constructor_distinct_FStar.Integers.W32",
        "constructor_distinct_FStar.Integers.W64",
        "constructor_distinct_FStar.Integers.W8",
        "constructor_distinct_FStar.Integers.Winfinite",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_Lib.IntTypes.S128",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S64",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Spec.Hash.Definitions.MD5",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_224",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_384",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "constructor_distinct_Spec.Hash.Definitions.SHA3_256",
        "equality_tok_FStar.Integers.W16@tok",
        "equality_tok_FStar.Integers.W32@tok",
        "equality_tok_FStar.Integers.W64@tok",
        "equality_tok_FStar.Integers.W8@tok",
        "equality_tok_FStar.Integers.Winfinite@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U1@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_Hacl.Hash.Definitions.get_alg",
        "equation_Hacl.Hash.Definitions.impl_state_length",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.maxint",
        "equation_Lib.IntTypes.minint", "equation_Lib.IntTypes.range",
        "equation_Lib.IntTypes.uint8", "equation_Lib.IntTypes.unsigned",
        "equation_LowStar.Buffer.buffer",
        "equation_LowStar.Buffer.trivial_preorder",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Spec.AES.gf8",
        "equation_Spec.AES.irred",
        "equation_Spec.Agile.HKDF.expand_info_length_pred",
        "equation_Spec.Agile.HKDF.expand_output_length_pred",
        "equation_Spec.Agile.HMAC.keysized", "equation_Spec.GaloisField.gf",
        "equation_Spec.Hash.Definitions.block_length",
        "equation_Spec.Hash.Definitions.fixed_len_alg",
        "equation_Spec.Hash.Definitions.hash_length",
        "equation_Spec.Hash.Definitions.hash_word_length",
        "equation_Spec.Hash.Definitions.is_keccak",
        "equation_Spec.Hash.Definitions.is_md",
        "equation_Spec.Hash.Definitions.is_shake",
        "equation_Spec.Hash.Definitions.less_than_max_input_length",
        "equation_Spec.Hash.Definitions.max_input_length",
        "equation_Spec.Hash.Definitions.state_word_length",
        "equation_Spec.Hash.Definitions.word_length",
        "fuel_guarded_inversion_Spec.Hash.Definitions.hash_alg",
        "function_token_typing_Lib.IntTypes.uint8",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_Spec.GaloisField.GF_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Integers.Signed__0",
        "projection_inverse_FStar.Integers.Unsigned__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Spec.GaloisField.GF_t",
        "refinement_interpretation_Tm_refine_042ec925769949f282ab80a26a462500",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7c5b3c0259e9a8bdca3a749c45554ed4",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_de8080fdc4bd6678af723874a7d70466",
        "typing_Lib.IntTypes.v", "typing_LowStar.Buffer.trivial_preorder",
        "typing_LowStar.Monotonic.Buffer.length", "typing_Spec.AES.gf8",
        "typing_Spec.Agile.HKDF.expand_info_length_pred",
        "typing_Spec.GaloisField.__proj__GF__item__t",
        "typing_Spec.Hash.Definitions.is_shake",
        "typing_Spec.Hash.Definitions.less_than_max_input_length",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.U32@tok"
      ],
      0,
      "2a09634a2d7589bf09a47e1e9043f9be"
    ],
    [
      "EverCrypt.HKDF.expand_sha1",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA1",
        "equality_tok_Spec.Hash.Definitions.SHA1@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "aa71e5987933ae59a27a7c7568d08ec3"
    ],
    [
      "EverCrypt.HKDF.extract_sha1",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA1",
        "equality_tok_Spec.Hash.Definitions.SHA1@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "75ffe99f4a42c4ee585b867c02797130"
    ],
    [
      "EverCrypt.HKDF.expand_sha2_256",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "d194999b2848584f4e3bf6348f9751b7"
    ],
    [
      "EverCrypt.HKDF.extract_sha2_256",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "98c77503a2b1d9d7d67b77156e1ffb8b"
    ],
    [
      "EverCrypt.HKDF.expand_sha2_384",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_384",
        "equality_tok_Spec.Hash.Definitions.SHA2_384@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "a311602aa1a10175ef937405418f8425"
    ],
    [
      "EverCrypt.HKDF.extract_sha2_384",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_384",
        "equality_tok_Spec.Hash.Definitions.SHA2_384@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "19d1f3a0246ce2e3a1770cf61833a3bd"
    ],
    [
      "EverCrypt.HKDF.expand_sha2_512",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "equality_tok_Spec.Hash.Definitions.SHA2_512@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "4a39670eeff6d1a69306952098ceabfc"
    ],
    [
      "EverCrypt.HKDF.extract_sha2_512",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "equality_tok_Spec.Hash.Definitions.SHA2_512@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "8c399cb9ec08ac23d779798882745052"
    ],
    [
      "EverCrypt.HKDF.expand_blake2s",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2S",
        "equality_tok_Spec.Hash.Definitions.Blake2S@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "6a116a33f3383f53380600641a9f5094"
    ],
    [
      "EverCrypt.HKDF.extract_blake2s",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2S",
        "equality_tok_Spec.Hash.Definitions.Blake2S@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "2ab612b325b589cb580bbafc5155cf44"
    ],
    [
      "EverCrypt.HKDF.expand_blake2b",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2B",
        "equality_tok_Spec.Hash.Definitions.Blake2B@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "8a796f9aaeff8c49712cf0ff430b443a"
    ],
    [
      "EverCrypt.HKDF.extract_blake2b",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2B",
        "equality_tok_Spec.Hash.Definitions.Blake2B@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "a82d84f7852799365594cdcf91087993"
    ],
    [
      "EverCrypt.HKDF.expand_sha1",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA1",
        "equality_tok_Spec.Hash.Definitions.SHA1@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "f1e5999f0979d703336ce6b3ea847754"
    ],
    [
      "EverCrypt.HKDF.extract_sha1",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA1",
        "equality_tok_Spec.Hash.Definitions.SHA1@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "ec3da85058eed06e7f2782a0aea24124"
    ],
    [
      "EverCrypt.HKDF.expand_sha2_256",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "c43f3b67e9ca6b35f77d55e82568d20c"
    ],
    [
      "EverCrypt.HKDF.extract_sha2_256",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "eb28e12044e62827a95d82465807cc20"
    ],
    [
      "EverCrypt.HKDF.expand_sha2_384",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_384",
        "equality_tok_Spec.Hash.Definitions.SHA2_384@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "70668898b20c8522183250597b30250f"
    ],
    [
      "EverCrypt.HKDF.extract_sha2_384",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_384",
        "equality_tok_Spec.Hash.Definitions.SHA2_384@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "b298bb549fbc9349b671fc6e5f789637"
    ],
    [
      "EverCrypt.HKDF.expand_sha2_512",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "equality_tok_Spec.Hash.Definitions.SHA2_512@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "9c82aae08fc86c03c41ef53a3b29e0bc"
    ],
    [
      "EverCrypt.HKDF.extract_sha2_512",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "equality_tok_Spec.Hash.Definitions.SHA2_512@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "efe9c9d7fc2095213d0fb49d9c691c61"
    ],
    [
      "EverCrypt.HKDF.expand_blake2s",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2S",
        "equality_tok_Spec.Hash.Definitions.Blake2S@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "b49093dbf6d9db00653bd50221ec657b"
    ],
    [
      "EverCrypt.HKDF.extract_blake2s",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2S",
        "equality_tok_Spec.Hash.Definitions.Blake2S@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "93c21e30041ef27efcf8ee131d950ce2"
    ],
    [
      "EverCrypt.HKDF.expand_blake2b",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2B",
        "equality_tok_Spec.Hash.Definitions.Blake2B@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "9a52ce2e4ed07e1bbee14916d3b26c86"
    ],
    [
      "EverCrypt.HKDF.extract_blake2b",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Spec.Hash.Definitions.Blake2B",
        "equality_tok_Spec.Hash.Definitions.Blake2B@tok",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "69b380a27fd8016582f7cc98c0fea543"
    ],
    [
      "EverCrypt.HKDF.expand",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "equation_EverCrypt.HMAC.is_supported_alg",
        "equation_EverCrypt.HMAC.supported_alg",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_22cd46bfa9701240f3c51fb554271fe4",
        "typing_EverCrypt.HMAC.is_supported_alg",
        "typing_Spec.Hash.Definitions.is_shake"
      ],
      0,
      "7675b74112f340b901e81cd5b3da2534"
    ],
    [
      "EverCrypt.HKDF.expand",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_Spec.Hash.Definitions.Blake2B",
        "disc_equation_Spec.Hash.Definitions.Blake2S",
        "disc_equation_Spec.Hash.Definitions.SHA1",
        "disc_equation_Spec.Hash.Definitions.SHA2_256",
        "disc_equation_Spec.Hash.Definitions.SHA2_384",
        "disc_equation_Spec.Hash.Definitions.SHA2_512",
        "equality_tok_Spec.Hash.Definitions.Blake2B@tok",
        "equality_tok_Spec.Hash.Definitions.Blake2S@tok",
        "equality_tok_Spec.Hash.Definitions.SHA1@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_384@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_512@tok",
        "equation_EverCrypt.HMAC.is_supported_alg",
        "equation_EverCrypt.HMAC.supported_alg",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_169e1cc520a785266697063aee6ecd46",
        "refinement_interpretation_Tm_refine_22cd46bfa9701240f3c51fb554271fe4",
        "refinement_interpretation_Tm_refine_2b01bec1c985b5cb9974ab368aee84b7",
        "refinement_interpretation_Tm_refine_455c41a7e6565c9fc1e83d12399a17d1",
        "refinement_interpretation_Tm_refine_50de882748cb1296a8e6077d3a8ec400",
        "refinement_interpretation_Tm_refine_7c5b3c0259e9a8bdca3a749c45554ed4",
        "refinement_interpretation_Tm_refine_90288dc698ceec6eec0fe95cef5c7196",
        "refinement_interpretation_Tm_refine_ac10f15902290505fbade8b076518370"
      ],
      0,
      "3c8cd17d66268fdd0e9a8a941061d251"
    ],
    [
      "EverCrypt.HKDF.extract",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_256",
        "constructor_distinct_Spec.Hash.Definitions.SHA2_512",
        "equation_EverCrypt.HMAC.is_supported_alg",
        "equation_EverCrypt.HMAC.supported_alg",
        "equation_Spec.Hash.Definitions.is_shake",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_22cd46bfa9701240f3c51fb554271fe4",
        "typing_EverCrypt.HMAC.is_supported_alg",
        "typing_Spec.Hash.Definitions.is_shake"
      ],
      0,
      "c24b5a63b40c76c073af6c8ce2f1f329"
    ],
    [
      "EverCrypt.HKDF.extract",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_Spec.Hash.Definitions.Blake2B",
        "disc_equation_Spec.Hash.Definitions.Blake2S",
        "disc_equation_Spec.Hash.Definitions.SHA1",
        "disc_equation_Spec.Hash.Definitions.SHA2_256",
        "disc_equation_Spec.Hash.Definitions.SHA2_384",
        "disc_equation_Spec.Hash.Definitions.SHA2_512",
        "equality_tok_Spec.Hash.Definitions.Blake2B@tok",
        "equality_tok_Spec.Hash.Definitions.Blake2S@tok",
        "equality_tok_Spec.Hash.Definitions.SHA1@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_256@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_384@tok",
        "equality_tok_Spec.Hash.Definitions.SHA2_512@tok",
        "equation_EverCrypt.HMAC.is_supported_alg",
        "equation_EverCrypt.HMAC.supported_alg",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_0951c2edb150d70836f3d16798fe8272",
        "refinement_interpretation_Tm_refine_1f5aa884534f963fe5cba3a65aa57c18",
        "refinement_interpretation_Tm_refine_22cd46bfa9701240f3c51fb554271fe4",
        "refinement_interpretation_Tm_refine_246bdb881872ddabcf3726c2030b4f14",
        "refinement_interpretation_Tm_refine_328939acd293d2a3ec5363f0b37707b5",
        "refinement_interpretation_Tm_refine_57e57afbe18935620fbc6825ecb262ba",
        "refinement_interpretation_Tm_refine_8db34ca2d2a5e29512f769603b671bbb",
        "refinement_interpretation_Tm_refine_bc7e3f9735b67de334f636112d04ec62"
      ],
      0,
      "2bf75c6ddc9a3da1a0ab4b7e4506c99a"
    ]
  ]
]