[
  "122027162fb9013da8f9545f288df5a9",
  [
    [
      "Vale.AES.PPC64LE.GCMdecrypt.aes_reqs",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "c05f257b2d0da75fba40f5bf6fdf292c"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_qcode_Gcm_extra_bytes",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "ec7a08a267f170c4c3bdbe9ec14c23f9"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_extra_bytes",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_8ca1113effb720a311411f16b80b1990",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "90237f1337a99b3486b6cd58d794c005"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_extra_bytes",
      2,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.l_and", "equation_Prims.min",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.GCTR_BE.gctr_partial_def",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Def.Words_s.natN", "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.InsVector.buffer128_write",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_buffer_write",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.AES.GCTR_BE.gctr_partial",
        "function_token_typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_create",
        "lemma_FStar.Seq.Base.lemma_index_upd1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Arch.Types.lemma_reverse_bytes_quad32",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_04e7de6d84df95d8010bdff92963f9d0",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_3812239f7745dcef43e09943bec4b665",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_e8685191bd389eb247fe567487bfcc95",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.AES.GCTR_BE.gctr_partial_def",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.create", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.InsVector.buffer128_write",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.buffer_write",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "f7b25dd320e1795e600bbd5afaf6d6f0"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_extra_bytes",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat8",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "1bde8e0a7314daf43ce7629042245a96"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_Gcm_extra_bytes",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "equation_FStar.FunctionalExtensionality.feq",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_extra_bytes",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "unit_typing"
      ],
      0,
      "3b3d49d401be799f9352fc321cc9e5e3"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_Gcm_extra_bytes",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "e617e8f6725371d202b70895dd217e1b"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks128",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_dba61697c08231188671f1e33d6827c0"
      ],
      0,
      "ff83c9288274addf326e925ac3ea7e3a"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks128",
      2,
      1,
      0,
      [
        "@MaxIFuel_assumption",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "b2t_typing", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eq2", "equation_Prims.eqtype",
        "equation_Prims.l_imp", "equation_Prims.logical",
        "equation_Prims.nat",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp", "l_imp-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.seq",
        "typing_Prims.eq2", "typing_Prims.int", "typing_Prims.l_and",
        "typing_Prims.l_imp",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE.inc32lite",
        "typing_Vale.AES.GHash_BE.ghash_incremental",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "f347ec193ecf7ba6aa067d67371a84aa"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks128",
      1,
      1,
      0,
      [
        "@query", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "a9dab4d150cb10c73f3e8aea708c4618"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_Gcm_blocks128",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks128",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_cr0",
        "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "unit_typing"
      ],
      0,
      "7f1a9098759cb8df8f0379a2d3e7ef7e"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_Gcm_blocks128",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "6884a79e3ea104c0d0bb67adcdcc7d9f"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_qcode_Gcm_blocks",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_int_at_least",
        "kinding_Vale.Def.Words_s.four@tok", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_4f1d92a9a3f071e1fa3026ba94fce31c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.length", "typing_Vale.Def.Words_s.nat32"
      ],
      0,
      "24c024b196821346c840a9b554ab4a57"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c8d57dc6c89bf38a4552b343445fa874",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "1ca0a1f0aa21c259591a0bf4ea3ad5cf"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks",
      2,
      1,
      0,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "@kick_partial_app_807972d094cc8a4925577f9a1c98315c", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_6964411159f1ee089e74eba93d0caa1f",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "constructor_distinct_Vale.PPC64LE.Machine_s.CReg",
        "disc_equation_Vale.PPC64LE.Machine_s.CReg", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Seq.Base.op_At_Bar", "equation_Prims.eq2",
        "equation_Prims.l_and", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.GCM_helpers_BE.bytes_to_quad_size",
        "equation_Vale.AES.GCTR_BE.empty_seq_quad32",
        "equation_Vale.AES.GCTR_BE.inc32lite",
        "equation_Vale.AES.GCTR_BE_s.gctr_encrypt_block",
        "equation_Vale.AES.GCTR_BE_s.inc32",
        "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.GHash_BE.ghash_incremental0",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.AES.PPC64LE.GCTR.aes_reqs",
        "equation_Vale.AES.PPC64LE.GHash.hkeys_b_powers",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.add_wrap_quad32",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0",
        "equation_Vale.Def.Types_s.add_wrap",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_first_cmp_opr",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_1bea9775e2877d6db880279d5568f22f",
        "interpretation_Tm_abs_2016d1ab7b737c5b4956ec4df411f1d5",
        "interpretation_Tm_abs_26d09c48b68697cc7308b6d5747b865d",
        "interpretation_Tm_abs_29071336af5602a4bbc74abd577c7ffa",
        "interpretation_Tm_abs_2b785d34d4f687f4c940d68a4b57fd8e",
        "interpretation_Tm_abs_35fa43af42db876c29c2a4dd93270ce6",
        "interpretation_Tm_abs_3ca3051c55b6ad0f6c3c2603fcf1fb7e",
        "interpretation_Tm_abs_3ccfcd1e8e52dcd91b166eecc8a86682",
        "interpretation_Tm_abs_42308a4d17416ad95afbc44a00f953ea",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_5ee0786cb2d5021d405d8d83a00408b2",
        "interpretation_Tm_abs_74388f1edf25ef1d7103ff508192224a",
        "interpretation_Tm_abs_80bf023694e25884db3977e43f414362",
        "interpretation_Tm_abs_81d8cff1243634746d42743c44fdcbb2",
        "interpretation_Tm_abs_823d5ec4269986543601e061f763f397",
        "interpretation_Tm_abs_86b3877609f8f4fbf52bf923dc1cc20a",
        "interpretation_Tm_abs_8f672847beceb442e6966989098060d6",
        "interpretation_Tm_abs_938acf8fd57fd63c32d1091bef3f22e6",
        "interpretation_Tm_abs_b6f471d42c95286277906d74809e3eff",
        "interpretation_Tm_abs_bc4e9b7149b00e6788eb07cb9d3491f7",
        "interpretation_Tm_abs_c772eb2d160a4def62a2642f22943c8a",
        "interpretation_Tm_abs_e920171e2b6ad871b015fc77c0916a49",
        "interpretation_Tm_abs_fd5ce07eea7ccaf8bd74a3127f0e7003",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append", "lemma_Lib.IntTypes.pow2_4",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.modifies_refl",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_heap_layout_@vl_taint",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@a",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.CReg_@r",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_0ce91af3d6762ea7d913b870f9e33a01",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_e88e14f7f21c8c5fa98a9920491df749",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.op_At_Bar",
        "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_1bea9775e2877d6db880279d5568f22f",
        "typing_Tm_abs_3ccfcd1e8e52dcd91b166eecc8a86682",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_e920171e2b6ad871b015fc77c0916a49",
        "typing_Vale.AES.GCTR_BE.empty_seq_quad32",
        "typing_Vale.AES.GCTR_BE.gctr_partial",
        "typing_Vale.AES.GCTR_BE_s.inc32",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__hi2",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__hi3",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo0",
        "typing_Vale.Def.Words_s.__proj__Mkfour__item__lo1",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "c47036d3df9dc581f93d4897e9fccae5"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_6964411159f1ee089e74eba93d0caa1f",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_26d09c48b68697cc7308b6d5747b865d",
        "interpretation_Tm_abs_3ca3051c55b6ad0f6c3c2603fcf1fb7e",
        "interpretation_Tm_abs_823d5ec4269986543601e061f763f397",
        "interpretation_Tm_abs_938acf8fd57fd63c32d1091bef3f22e6",
        "interpretation_Tm_abs_fd5ce07eea7ccaf8bd74a3127f0e7003",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_e88e14f7f21c8c5fa98a9920491df749",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_e920171e2b6ad871b015fc77c0916a49",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok", "unit_typing"
      ],
      0,
      "a20560ca49d204fa6c48903a041f9ecb"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_Gcm_blocks",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_6c428e93ebf4b722d16a52da60b36661",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.nat", "equation_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_26d09c48b68697cc7308b6d5747b865d",
        "interpretation_Tm_abs_2d43e392db60cb4106d2c17336becaaf",
        "interpretation_Tm_abs_3ca3051c55b6ad0f6c3c2603fcf1fb7e",
        "interpretation_Tm_abs_3ccfcd1e8e52dcd91b166eecc8a86682",
        "interpretation_Tm_abs_74388f1edf25ef1d7103ff508192224a",
        "interpretation_Tm_abs_823d5ec4269986543601e061f763f397",
        "interpretation_Tm_abs_938acf8fd57fd63c32d1091bef3f22e6",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_e920171e2b6ad871b015fc77c0916a49",
        "interpretation_Tm_abs_fb166ca37fe0e638949a9c82d1e5b5bb",
        "interpretation_Tm_abs_fd5ce07eea7ccaf8bd74a3127f0e7003",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_303bbd7fc55e373edf62bcc577c97a65",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_9007db63ec61e97c8b6b7c303f1410a0",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_f31d7453a2d6299dfd658a7b9a506c7f",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.init",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "typing_Vale.AES.GCTR_BE_s.pad_to_128_bits",
        "typing_Vale.AES.PPC64LE.GCMdecrypt.va_code_Gcm_blocks",
        "typing_Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.be_bytes_to_seq_quad32",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Def.Words_s.nat8", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_typing"
      ],
      0,
      "669ad809f12e1b4c562063f72d9efe3e"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_Gcm_blocks",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "cd82db6efc8f6d6016c2478266f7162b"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_qcode_Gcm_blocks_wrapped",
      1,
      1,
      0,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "b2t_def", "constructor_distinct_Tm_unit",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Int.pow2_values",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_4fc9b34b85007cf99742e96f1f42065d",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_ae393b922d6c5aa634d3c5c4145151f4",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.create",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "9a4b1c6dda487eadec9210b79db0c782"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks_wrapped",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_48524f30f3a72f9570ee4ce6639bd0bd",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "111f52be833f764113996979960374c5"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks_wrapped",
      2,
      1,
      0,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt64", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.Pervasives.Native.fst", "equation_Prims.eq2",
        "equation_Prims.l_True", "equation_Prims.l_and",
        "equation_Prims.nat", "equation_Prims.pos", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.GHash_BE.hkeys_reqs_priv",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Four_s.two_two_to_four",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Two_s.nat_to_two",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2016d1ab7b737c5b4956ec4df411f1d5",
        "interpretation_Tm_abs_232686d2a2a2438f15364826a9df42ef",
        "interpretation_Tm_abs_42308a4d17416ad95afbc44a00f953ea",
        "interpretation_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "interpretation_Tm_abs_5ee0786cb2d5021d405d8d83a00408b2",
        "interpretation_Tm_abs_80bf023694e25884db3977e43f414362",
        "interpretation_Tm_abs_81d8cff1243634746d42743c44fdcbb2",
        "interpretation_Tm_abs_86b3877609f8f4fbf52bf923dc1cc20a",
        "interpretation_Tm_abs_8f672847beceb442e6966989098060d6",
        "interpretation_Tm_abs_a6fbf8ad43b64603fe6de83808ba5e08",
        "interpretation_Tm_abs_b6f471d42c95286277906d74809e3eff",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Int.pow2_values", "lemma_FStar.Seq.Base.init_index_",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@hi",
        "projection_inverse_Vale.Def.Words_s.Mktwo_@lo",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing", "token_correspondence_FStar.Seq.Base.index",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_Vale.Def.Types_s.reverse_bytes_quad32",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "true_interp", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.eta", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "75ee3cdd5c8f1c8ff60ab869f860ecef"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks_wrapped",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128", "eq2-interp",
        "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat", "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "537c894f961d08faa1abf502a5a63b1c"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_Gcm_blocks_wrapped",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_interpretation_Tm_arrow_5b1c7f3f701f4c9bd877a4f9b4ec1dfa",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_45d1e98a34e2a83fdf727af21ac47287",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_6c428e93ebf4b722d16a52da60b36661",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e42cd914c3cd7b61852a3e7ed695d2df",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_ee08f145152b803b9ba490f3433f531d",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.is_restricted",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks_wrapped",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.FunctionalExtensionality.extensionality",
        "lemma_FStar.FunctionalExtensionality.feq_on_domain",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_kinding_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_FStar.FunctionalExtensionality.on_domain",
        "typing_Tm_abs_8069b07c2ffaa85138e9ca799d1fcbde",
        "typing_Tm_abs_9812c7593ab3de449252e1cbaabe6cf8",
        "typing_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "typing_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "unit_typing"
      ],
      0,
      "fda90b4d43f9527586810daa957f1b71"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_Gcm_blocks_wrapped",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "7157b3e4c9595d1fa55e801c473df053"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_qcode_Nat64Equal",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "03ff4cc4b2543c4a8ba61197bd5ccdbd"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Nat64Equal",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_08914c2d1956357182c0c6ee104f8cda",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_7b7143bf3b70575857dfdf63c295de79",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_831457b3460132b9f7495239ff368774",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_a87f4bad0dcd459bf3115cf4ae83d009",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "bool_typing",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.add_wrap",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.xer_t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2006d79cd0457fda8fd206f85e59bd09",
        "interpretation_Tm_abs_2bbabd68bb5c0605280d8e261b9fa829",
        "interpretation_Tm_abs_532f484f1e911bdd3d4513eab0058770",
        "interpretation_Tm_abs_b063dd7718ea7310fd0320f80f78f7ff",
        "interpretation_Tm_abs_c61907bb42a03c601771a65fe2cf8206",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_ead871c57adcd0772c86e2ed61aab985",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Prims.bool",
        "typing_Tm_abs_2006d79cd0457fda8fd206f85e59bd09",
        "typing_Tm_abs_532f484f1e911bdd3d4513eab0058770",
        "typing_Tm_abs_c61907bb42a03c601771a65fe2cf8206",
        "typing_Tm_abs_ead871c57adcd0772c86e2ed61aab985",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Def.Types_s.add_wrap",
        "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion",
        "unit_typing"
      ],
      0,
      "dd0a95a6f2e6673b3345644f44fa97b2"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_Nat64Equal",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_Nat64Equal",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_49fe241306034b7f13e890932230cf5d",
        "interpretation_Tm_abs_619dc965d9866efa2866c6afaa68dbda",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_Equality",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__xer",
        "unit_typing"
      ],
      0,
      "62e21b47fdd4f6ea6a2e1b302ac9e8c4"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_Nat64Equal",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "123a0cfec7e33f0cda28a76a08f384fe"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_qcode_VectorEqual",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Vale.Def.Words_s.nat32",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "haseqTm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "haseqTm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "typing_Prims.int"
      ],
      0,
      "9d52f024e5af43199e028ada07213158"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_VectorEqual",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_0efa79b15325d0f9e2d0e31b62b5c7bd",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_46d4c4873a819faf2307b74c85a659dc",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion", "bool_typing", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.natN",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_12f692688034e3c98d952f396cd7ce61",
        "interpretation_Tm_abs_2bb74134fcdc5f7c8343d6857dc81473",
        "interpretation_Tm_abs_303d1f6761f91eadf572ff18e8074103",
        "interpretation_Tm_abs_5cda830c5540e7c3beb81a66c2afa9e9",
        "interpretation_Tm_abs_5f1e174dca042c03ab367c25fdb6a2c1",
        "interpretation_Tm_abs_5f90ec7400f8892a888438c0a5dbb101",
        "interpretation_Tm_abs_611a62df224dda772dc7a2f206e97de6",
        "interpretation_Tm_abs_6452a14b947c9a701fd176739f5c2e9e",
        "interpretation_Tm_abs_85e985f419e2ca5ce504ed6c51aeb8ad",
        "interpretation_Tm_abs_8f78833018360bbe3ae851d32fa7275b",
        "interpretation_Tm_abs_90459a8ee24bf9b6e120befd680c02c2",
        "interpretation_Tm_abs_d12c3ec21ae716ac29aa57e025491bff",
        "interpretation_Tm_abs_efd65bdf6c2c693d5431c3b1a0c8a0b0",
        "interpretation_Tm_abs_f72b4d8a2edd0d93da0f26730b8a84b1",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi2",
        "proj_equation_Vale.Def.Words_s.Mkfour_@hi3",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo0",
        "proj_equation_Vale.Def.Words_s.Mkfour_@lo1",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi2",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@hi3",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo0",
        "projection_inverse_Vale.Def.Words_s.Mkfour_@lo1",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "string_typing",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Prims.bool",
        "typing_Tm_abs_2bb74134fcdc5f7c8343d6857dc81473",
        "typing_Tm_abs_6452a14b947c9a701fd176739f5c2e9e",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.QuickCodes.va_range1", "unit_inversion",
        "unit_typing"
      ],
      0,
      "10c1e8363f60d8dc7082ff8f723aecd1"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_VectorEqual",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_VectorEqual",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c1307c910167df0e51629daa6c63c55e",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_ffba65e252a50dc33164946502c64e44",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__xer",
        "unit_typing"
      ],
      0,
      "e1a369123707b09363a6c033eb235a1f"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_VectorEqual",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "3c0ea157c3adbe34214348d942070abe"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_req_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [ "@query", "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs" ],
      0,
      "679646a3ed0815123c72bce03a7a1df8"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_ens_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_req_Gcm_blocks_decrypt_stdcall",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "95e3201c862db993014464c625352614"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_qcode_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.Def.Words_s.nat64", "equation_Vale.Def.Words_s.natN",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c"
      ],
      0,
      "d7acbd2e3419bf9997104cb53cdf6d07"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_2479cd9a0dd1f13a32fedf94c4b03b0a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "0c90e1924df5bd872877c472ee98584f"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_lemma_Gcm_blocks_decrypt_stdcall",
      2,
      1,
      0,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_c4c5eecf79582e08384fd84695c0a138",
        "Vale.AES.PPC64LE.GCMdecrypt_interpretation_Tm_arrow_ead4f1768252a867314d17ad1a9dd3b3",
        "Vale.Arch.HeapImpl_pretyping_4aa61432b04e23a2d66ceb8d22171f42",
        "Vale.Arch.HeapImpl_pretyping_6646ba4902a38c8f85d79301e07488b2",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_1ae810a6297e23875e36fd129bc2c5c6",
        "Vale.PPC64LE.Decls_interpretation_Tm_arrow_c86d75f93af4c89dfc0526beeb2131ff",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_Vale.AES.AES_common_s.AES_128",
        "constructor_distinct_Vale.AES.AES_common_s.AES_256",
        "constructor_distinct_Vale.Arch.HeapImpl.Immutable",
        "constructor_distinct_Vale.Arch.HeapImpl.Mutable",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Vale.Arch.HeapImpl.Mkbuffer_info@tok",
        "eq2-interp", "equality_tok_Vale.AES.AES_common_s.AES_128@tok",
        "equality_tok_Vale.AES.AES_common_s.AES_256@tok",
        "equality_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "equality_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt64@tok",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_FStar.Pervasives.Native.snd", "equation_Prims.eq2",
        "equation_Prims.eqtype", "equation_Prims.l_True",
        "equation_Prims.l_and", "equation_Prims.logical",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_Vale.AES.AES_BE_s.is_aes_key_word",
        "equation_Vale.AES.AES_common_s.is_aes_key",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.HeapImpl.heaplet_id",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.Arch.Types.be_quad32_to_bytes",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Prop_s.prop0", "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq16",
        "equation_Vale.Def.Words.Seq_s.seq4",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words.Seq_s.seqn",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_if",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Decls.validDstAddrs",
        "equation_Vale.PPC64LE.Decls.validDstAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs128",
        "equation_Vale.PPC64LE.Decls.validSrcAddrs64",
        "equation_Vale.PPC64LE.InsMem.create_post",
        "equation_Vale.PPC64LE.InsMem.heaplet_id_is_some",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset128",
        "equation_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.buffer64",
        "equation_Vale.PPC64LE.Memory.buffer_info_disjoint",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.init_heaplets_req",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.Memory.valid_buffer_read",
        "equation_Vale.PPC64LE.Memory.valid_layout_buffer",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf128",
        "equation_Vale.PPC64LE.Memory.valid_taint_buf64",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "equation_with_fuel_FStar.List.Tot.Base.length.fuel_instrumented",
        "fuel_guarded_inversion_Vale.Def.Words_s.four",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Vale.Math.Poly2.Bits.of_nat32_ones",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_b5c60639166ac034d530256826fb86b1",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "interpretation_Tm_abs_e59d1143f76a22269896628f146f3b6b",
        "kinding_Vale.Arch.HeapImpl.buffer_info@tok",
        "kinding_Vale.Def.Words_s.four@tok", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.Def.Words.Seq.seq_to_seq_four_to_seq_BE",
        "lemma_Vale.Lib.Map16.lemma_equal_intro",
        "lemma_Vale.Lib.Map16.lemma_eta", "lemma_Vale.Lib.Map16.lemma_other",
        "lemma_Vale.Lib.Map16.lemma_self",
        "lemma_Vale.Math.Poly2.Lemmas.lemma_ones_degree",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "lemma_Vale.PPC64LE.Memory.lemma_heaps_match",
        "lemma_Vale.PPC64LE.QuickCodes.lemma_label_bool",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_intro",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_correct_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_frame_store_load_taint_stack64_128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_same_init_r1_store_stack64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_new_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid128",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64",
        "lemma_Vale.PPC64LE.Stack_i.lemma_store_stack_same_valid64_128",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_intro",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "proj_equation_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_Prims.Cons_@0",
        "projection_inverse_Prims.Cons_@a",
        "projection_inverse_Prims.Cons_@hd",
        "projection_inverse_Prims.Cons_@tl",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_buffer",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_heaplet",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_mutable",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_taint",
        "projection_inverse_Vale.Arch.HeapImpl.Mkbuffer_info_@bi_typ",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_10fce5557d0593095ff373cff619471e",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1aa199aad1fce63d7d33f603d89b9785",
        "refinement_interpretation_Tm_refine_1b44f0a4c5c8b16f6b015967bbd181b7",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_37b3edec16faddba730e4e710f565937",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_76ff460193a6e3286dfef73f654dcc3b",
        "refinement_interpretation_Tm_refine_9d6af3f3535473623f7aec2f0501897f",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "refinement_interpretation_Tm_refine_b896ddcb089d4c015e97126ba3dd8bdd",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c365eb902b454950de62fba701d9049d",
        "refinement_interpretation_Tm_refine_dacb21c1a552ec7c7501f2a99ed39cf2",
        "refinement_interpretation_Tm_refine_fb5904c7fade9e6ff06aa16678e3345c",
        "refinement_kinding_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "string_typing",
        "token_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "true_interp", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Prims.bool", "typing_Prims.eq2", "typing_Prims.l_and",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Tm_abs_b5c60639166ac034d530256826fb86b1",
        "typing_Tm_abs_e59d1143f76a22269896628f146f3b6b",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_inner",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_heap_layout__item__vl_taint",
        "typing_Vale.Arch.HeapImpl.vale_heap",
        "typing_Vale.Arch.Types.be_quad32_to_bytes",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Types_s.reverse_bytes_quad32",
        "typing_Vale.Def.Words.Seq_s.four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat64",
        "typing_Vale.Def.Words_s.nat8", "typing_Vale.Lib.Map16.eta",
        "typing_Vale.Lib.Map16.sel", "typing_Vale.Lib.Map16.upd",
        "typing_Vale.Lib.Seqs.list_to_seq",
        "typing_Vale.Math.Poly2.Bits.of_nat32",
        "typing_Vale.Math.Poly2_s.degree", "typing_Vale.PPC64LE.Decls.va_if",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.valid_maddr_offset64",
        "typing_Vale.PPC64LE.Memory.buffer_addr",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.buffer_read",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_Vale.PPC64LE.Memory.layout_buffers",
        "typing_Vale.PPC64LE.Memory.layout_heaplets_initialized",
        "typing_Vale.PPC64LE.Memory.loc_buffer",
        "typing_Vale.PPC64LE.Memory.loc_union",
        "typing_Vale.PPC64LE.Memory.modifies",
        "typing_Vale.PPC64LE.QuickCodes.label",
        "typing_Vale.PPC64LE.QuickCodes.va_range1",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_Sems.stack_to_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1",
        "typing_tok_Vale.Arch.HeapImpl.Immutable@tok",
        "typing_tok_Vale.Arch.HeapImpl.Mutable@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Public@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.Secret@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt64@tok", "unit_inversion",
        "unit_typing"
      ],
      0,
      "263a52d3e67dc35137fa4ed34c033c99"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Seq.Base_interpretation_Tm_arrow_6d76c8e4fc59503348e55fc915188ea1",
        "Vale.Def.Words.Four_s_interpretation_Tm_arrow_57cf062ad88ff86192177a2ff1a1d94c",
        "bool_inversion",
        "constructor_distinct_Vale.Arch.HeapTypes_s.TUInt128",
        "equality_tok_Vale.Arch.HeapTypes_s.TUInt128@tok",
        "equation_Prims.nat",
        "equation_Vale.AES.PPC64LE.GCMencrypt.aes_reqs",
        "equation_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "equation_Vale.Def.Types_s.quad32",
        "equation_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "equation_Vale.Def.Words_s.nat32", "equation_Vale.Def.Words_s.nat64",
        "equation_Vale.Def.Words_s.nat8", "equation_Vale.Def.Words_s.natN",
        "equation_Vale.Lib.Seqs_s.compose",
        "equation_Vale.Lib.Seqs_s.seq_map",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Memory.base_typ_as_vale_type",
        "equation_Vale.PPC64LE.Memory.buffer128",
        "equation_Vale.PPC64LE.Memory.get_vale_heap",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_inversion", "int_typing", "kinding_Vale.Def.Words_s.four@tok",
        "lemma_FStar.Seq.Base.lemma_init_len",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Vale.PPC64LE.Memory.buffer_length_buffer_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "refinement_interpretation_Tm_refine_160fe7faad9a466b3cae8455bac5be60",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a92b6e4e7af9363bc35e43d9d7f3f13",
        "refinement_interpretation_Tm_refine_5f665776a490d6ed75873d1a2e3e6650",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "typing_FStar.Seq.Base.init", "typing_FStar.Seq.Base.length",
        "typing_Tm_abs_5a3faa86d9217d131d7445e3120e3d25",
        "typing_Vale.Arch.Types.reverse_bytes_quad32_seq",
        "typing_Vale.Def.Words.Seq_s.seq_four_to_seq_BE",
        "typing_Vale.Def.Words.Seq_s.seq_nat32_to_seq_nat8_BE",
        "typing_Vale.Def.Words_s.nat32", "typing_Vale.Def.Words_s.nat8",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Memory.buffer_as_seq",
        "typing_Vale.PPC64LE.Memory.buffer_length",
        "typing_Vale.PPC64LE.Memory.get_vale_heap",
        "typing_tok_Vale.Arch.HeapTypes_s.TUInt128@tok"
      ],
      0,
      "d56df150c3b0e575a241fde98e7f1435"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_wpProof_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.FunctionalExtensionality_interpretation_Tm_arrow_505f8adb466dc430d209c7de298af914",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_9f12a279078d2ae25ffc740c951cb7fb",
        "Vale.PPC64LE.Machine_s_interpretation_Tm_arrow_e8538dbe6e1a0938a1867df418eece85",
        "Vale.PPC64LE.Machine_s_pretyping_978f4b2f7ba9d3e285b5fe0363a244f6",
        "bool_inversion",
        "equation_FStar.FunctionalExtensionality.restricted_t",
        "equation_Vale.AES.PPC64LE.GCMdecrypt.va_wp_Gcm_blocks_decrypt_stdcall",
        "equation_Vale.Arch.HeapImpl.vale_heaplets",
        "equation_Vale.PPC64LE.Decls.va_ensure_total",
        "equation_Vale.PPC64LE.Decls.va_require_total",
        "equation_Vale.PPC64LE.Decls.va_state_eq",
        "equation_Vale.PPC64LE.Decls.va_upd_cr0",
        "equation_Vale.PPC64LE.Decls.va_upd_mem",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_heaplet",
        "equation_Vale.PPC64LE.Decls.va_upd_mem_layout",
        "equation_Vale.PPC64LE.Decls.va_upd_ok",
        "equation_Vale.PPC64LE.Decls.va_upd_reg",
        "equation_Vale.PPC64LE.Decls.va_upd_stack",
        "equation_Vale.PPC64LE.Decls.va_upd_stackTaint",
        "equation_Vale.PPC64LE.Decls.va_upd_vec",
        "equation_Vale.PPC64LE.Decls.va_upd_xer",
        "equation_Vale.PPC64LE.Machine_s.reg",
        "equation_Vale.PPC64LE.Machine_s.regs_t",
        "equation_Vale.PPC64LE.Machine_s.vec",
        "equation_Vale.PPC64LE.Machine_s.vecs_t",
        "equation_Vale.PPC64LE.Memory.memtaint",
        "equation_Vale.PPC64LE.Memory.set_vale_heap",
        "equation_Vale.PPC64LE.Memory.vale_full_heap_equal",
        "equation_Vale.PPC64LE.QuickCode.t_require",
        "equation_Vale.PPC64LE.QuickCode.va_t_ensure",
        "equation_Vale.PPC64LE.Regs.t",
        "equation_Vale.PPC64LE.State.state_eq",
        "equation_Vale.PPC64LE.State.update_reg",
        "equation_Vale.PPC64LE.State.update_vec",
        "equation_Vale.PPC64LE.Vecs.t",
        "fuel_guarded_inversion_Vale.Arch.HeapImpl.vale_full_heap",
        "fuel_guarded_inversion_Vale.PPC64LE.Machine_s.state",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "function_token_typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "function_token_typing_Vale.PPC64LE.State.same_heap_types",
        "int_typing",
        "interpretation_Tm_abs_c80674c7795978b4f84b89170c2cc1ad",
        "interpretation_Tm_abs_cebc4df0c9be9f4974812dfa9547be9b",
        "lemma_Vale.Lib.Map16.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Regs.lemma_equal_elim",
        "lemma_Vale.PPC64LE.Vecs.lemma_equal_elim",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "proj_equation_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_layout",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "proj_equation_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_2",
        "projection_inverse_FStar.Pervasives.Native.Mktuple3_@_3",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heap",
        "projection_inverse_Vale.Arch.HeapImpl.Mkvale_full_heap_@vf_heaplets",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@cr0",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_heap",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stack",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ms_stackTaint",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@ok",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@regs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@vecs",
        "projection_inverse_Vale.PPC64LE.Machine_s.Mkstate_@xer",
        "refinement_interpretation_Tm_refine_10933b2b7d83031ac55f8752406bdc16",
        "refinement_interpretation_Tm_refine_1c27afc834d559c90ed8939585279b1e",
        "refinement_interpretation_Tm_refine_a1aae0d1250746da268153e88a2134fc",
        "refinement_interpretation_Tm_refine_a94de11175d00fdbbdf07b37c09f231c",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "token_correspondence_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heap",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_heaplets",
        "typing_Vale.Arch.HeapImpl.__proj__Mkvale_full_heap__item__vf_layout",
        "typing_Vale.Arch.HeapImpl.vale_heap", "typing_Vale.Lib.Map16.sel",
        "typing_Vale.Lib.Map16.upd", "typing_Vale.PPC64LE.Decls.va_upd_mem",
        "typing_Vale.PPC64LE.Decls.va_upd_ok",
        "typing_Vale.PPC64LE.Decls.va_upd_reg",
        "typing_Vale.PPC64LE.Decls.va_upd_vec",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__cr0",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_heap",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stack",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ms_stackTaint",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__ok",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__regs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__vecs",
        "typing_Vale.PPC64LE.Machine_s.__proj__Mkstate__item__xer",
        "typing_Vale.PPC64LE.Stack_Sems.stack_from_s",
        "typing_Vale.PPC64LE.Stack_i.init_r1", "unit_typing"
      ],
      0,
      "4b1528c6df99fd649b568b6ac418ac16"
    ],
    [
      "Vale.AES.PPC64LE.GCMdecrypt.va_quick_Gcm_blocks_decrypt_stdcall",
      1,
      1,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple3"
      ],
      0,
      "b3ee065abab2a58d0ea6bd65a753e68e"
    ]
  ]
]