#![allow(non_upper_case_globals)]
#![allow(dead_code)]
#![allow(const_item_mutation)]

const input: [u8; 512] = [0u8; 512];

const key: [u8; 32] = [
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];

const nonce: [u8; 8] = [ 0u8; 8 ];

const exp1: [u8; 64] = [
  0xe3, 0xbe, 0x8f, 0xdd, 0x8b, 0xec, 0xa2, 0xe3,
  0xea, 0x8e, 0xf9, 0x47, 0x5b, 0x29, 0xa6, 0xe7,
  0x00, 0x39, 0x51, 0xe1, 0x09, 0x7a, 0x5c, 0x38,
  0xd2, 0x3b, 0x7a, 0x5f, 0xad, 0x9f, 0x68, 0x44,
  0xb2, 0x2c, 0x97, 0x55, 0x9e, 0x27, 0x23, 0xc7,
  0xcb, 0xbd, 0x3f, 0xe4, 0xfc, 0x8d, 0x9a, 0x07,
  0x44, 0x65, 0x2a, 0x83, 0xe7, 0x2a, 0x9c, 0x46,
  0x18, 0x76, 0xaf, 0x4d, 0x7e, 0xf1, 0xa1, 0x17 
];

const exp2: [u8; 64] = [
  0x57, 0xbe, 0x81, 0xf4, 0x7b, 0x17, 0xd9, 0xae,
  0x7c, 0x4f, 0xf1, 0x54, 0x29, 0xa7, 0x3e, 0x10,
  0xac, 0xf2, 0x50, 0xed, 0x3a, 0x90, 0xa9, 0x3c,
  0x71, 0x13, 0x08, 0xa7, 0x4c, 0x62, 0x16, 0xa9,
  0xed, 0x84, 0xcd, 0x12, 0x6d, 0xa7, 0xf2, 0x8e,
  0x8a, 0xbf, 0x8b, 0xb6, 0x35, 0x17, 0xe1, 0xca,
  0x98, 0xe7, 0x12, 0xf4, 0xfb, 0x2e, 0x1a, 0x6a,
  0xed, 0x9f, 0xdc, 0x73, 0x29, 0x1f, 0xaa, 0x17 
];

const exp3: [u8; 64] = [
  0x95, 0x82, 0x11, 0xc4, 0xba, 0x2e, 0xbd, 0x58,
  0x38, 0xc6, 0x35, 0xed, 0xb8, 0x1f, 0x51, 0x3a,
  0x91, 0xa2, 0x94, 0xe1, 0x94, 0xf1, 0xc0, 0x39,
  0xae, 0xec, 0x65, 0x7d, 0xce, 0x40, 0xaa, 0x7e,
  0x7c, 0x0a, 0xf5, 0x7c, 0xac, 0xef, 0xa4, 0x0c,
  0x9f, 0x14, 0xb7, 0x1a, 0x4b, 0x34, 0x56, 0xa6,
  0x3e, 0x16, 0x2e, 0xc7, 0xd8, 0xd1, 0x0b, 0x8f,
  0xfb, 0x18, 0x10, 0xd7, 0x10, 0x01, 0xb6, 0x18 
];

const exp4: [u8; 64] = [
  0x69, 0x6a, 0xfc, 0xfd, 0x0c, 0xdd, 0xcc, 0x83,
  0xc7, 0xe7, 0x7f, 0x11, 0xa6, 0x49, 0xd7, 0x9a,
  0xcd, 0xc3, 0x35, 0x4e, 0x96, 0x35, 0xff, 0x13,
  0x7e, 0x92, 0x99, 0x33, 0xa0, 0xbd, 0x6f, 0x53,
  0x77, 0xef, 0xa1, 0x05, 0xa3, 0xa4, 0x26, 0x6b,
  0x7c, 0x0d, 0x08, 0x9d, 0x08, 0xf1, 0xe8, 0x55,
  0xcc, 0x32, 0xb1, 0x5b, 0x93, 0x78, 0x4a, 0x36,
  0xe5, 0x6a, 0x76, 0xcc, 0x64, 0xbc, 0x84, 0x77 
];

#[test]
pub fn test_salsa20() {
  let mut comp = [0u8; 512];
  crate::salsa20::salsa20_encrypt0(512, &mut comp, &mut input, &mut key, &mut nonce, 0u32);
  assert_eq!(comp[0..64], exp1);
  assert_eq!(comp[192..256], exp2);
  assert_eq!(comp[256..320], exp3);
  assert_eq!(comp[448..512], exp4);
}
